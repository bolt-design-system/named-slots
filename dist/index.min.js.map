{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejs","named","slots","this","polyfilled","elem","mapPatch","get","getSlotName","node","getAttribute","mapSlotsDefault","nodeToArray","DocumentFragment","slice","call","childNodes","polyfill","name","props","prop","funcs","set","render","fn","slot","opts","default","coerce","val","Array","isArray","created","data","mapSlots","push","initial","filter","ch","WeakMap","Object","defineProperty","bind","childElementCount","children","length","_this","reduce","prev","curr","concat","nodeType","firstChild","firstElementChild","innerHTML","map","outerHTML","textContent","join","div","document","createElement","hasChildNodes","appendChild","lastChild","lastElementChild","tagName","toLowerCase","attributes","attr","value","createTextNode","newNode","insertBefore","refNode","index","indexOf","removeChild","replaceChild","main","previousGlobal","window","skatejsNamedSlots","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.skatejs-named-slots = factory());\n}(this, function () {\n\n  var mapPatch = new WeakMap();\n\n  var mapSlots = new WeakMap();\n\n  var mapSlotsDefault = new WeakMap();\n\n  // Returns whether or not the specified element has been polyfilled.\n  function polyfilled (elem) {\n    return mapPatch.get(elem);\n  }\n\n  var prop = Object.defineProperty.bind(Object);\n\n  // Helpers.\n\n  function getSlotName(elem, node) {\n    return node.getAttribute && node.getAttribute('slot') || mapSlotsDefault.get(elem);\n  }\n\n  function nodeToArray(node) {\n    return node instanceof DocumentFragment ? [].slice.call(node.childNodes) : [node];\n  }\n\n  // Prop overrides.\n\n  var props = {\n    childElementCount: {\n      get: function get() {\n        return this.children.length;\n      }\n    },\n    childNodes: {\n      get: function get() {\n        var _this = this;\n\n        return (mapSlots.get(this) || []).reduce(function (prev, curr) {\n          return prev.concat(_this[curr]);\n        }, []);\n      }\n    },\n    children: {\n      get: function get() {\n        return this.childNodes.filter(function (node) {\n          return node.nodeType === 1;\n        });\n      }\n    },\n    firstChild: {\n      get: function get() {\n        return this.childNodes[0];\n      }\n    },\n    firstElementChild: {\n      get: function get() {\n        return this.children[0];\n      }\n    },\n    innerHTML: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.outerHTML || node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        var div = document.createElement('div');\n        div.innerHTML = val;\n        while (div.hasChildNodes()) {\n          this.appendChild(div.childNodes[0]);\n        }\n      }\n    },\n    lastChild: {\n      get: function get() {\n        var ch = this.childNodes;\n        return ch[ch.length - 1];\n      }\n    },\n    lastElementChild: {\n      get: function get() {\n        var ch = this.children;\n        return ch[ch.length - 1];\n      }\n    },\n    outerHTML: {\n      get: function get() {\n        var name = this.tagName.toLowerCase();\n        var attributes = [].slice.call(this.attributes).map(function (attr) {\n          return ' ' + attr.name + (attr.value ? '=' + attr.value : '');\n        });\n        return '<' + name + attributes + '>' + this.innerHTML + '</' + name + '>';\n      }\n    },\n    textContent: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        var slot = mapSlotsDefault.get(this);\n        if (slot) {\n          this[slot] = document.createTextNode(val);\n        }\n      }\n    }\n  };\n\n  // Method overrides.\n\n  var funcs = {\n    appendChild: function appendChild(newNode) {\n      var name = getSlotName(this, newNode);\n      if (!name && !this[name]) return;\n      this[name] = this[name].concat(nodeToArray(newNode));\n      return newNode;\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.childNodes.length > 0;\n    },\n    insertBefore: function insertBefore(newNode, refNode) {\n      var name = getSlotName(this, newNode);\n      if (!name || !this[name]) return;\n      var index = this[name].indexOf(refNode);\n      this[name] = this[name].slice(0, index).concat(nodeToArray(newNode)).concat(this[name].slice(index));\n      return newNode;\n    },\n    removeChild: function removeChild(refNode) {\n      var name = getSlotName(this, refNode);\n      if (!name && !this[name]) return;\n      var index = this[name].indexOf(refNode);\n      this[name] = this[name].slice(0, index).concat(this[name].slice(index + 1));\n      return refNode;\n    },\n    replaceChild: function replaceChild(newNode, refNode) {\n      var name = getSlotName(this, newNode);\n      if (!name || !this[name]) return;\n      var index = this[name].indexOf(refNode);\n      this[name] = this[name].slice(0, index).concat(nodeToArray(newNode)).concat(this[name].slice(index + 1));\n      return refNode;\n    }\n  };\n\n  // Polyfills an element.\n  function polyfill (elem) {\n    if (polyfilled(elem)) {\n      return;\n    }\n\n    for (var name in props) {\n      prop(elem, name, props[name]);\n    }\n\n    for (var name in funcs) {\n      elem[name] = funcs[name];\n    }\n\n    mapPatch.set(elem, true);\n  }\n\n  // Simple renderer that proxies another renderer. It will polyfill if not yet\n  // polyfilled, or simply run the renderer. Initial content is taken into\n  // consideration.\n  function render (fn) {\n    return function (elem) {\n      if (mapPatch.get(elem)) {\n        fn(elem);\n      } else {\n        fn(elem);\n        polyfill(elem);\n      }\n    };\n  }\n\n  // Creates a slot property compatible with the SkateJS custom property\n  // definitions. Makes web component integration much simpler.\n  function slot (opts) {\n    if (!opts) {\n      opts = {\n        default: false,\n        set: null\n      };\n    }\n\n    return {\n      // Makes sure that whatever is passed in is an array.\n      coerce: function coerce(val) {\n        return Array.isArray(val) ? val : [val];\n      },\n\n      // Registers the slot so we can check later.\n      created: function created(elem, data) {\n        var slots = mapSlots.get(elem);\n\n        if (!slots) {\n          mapSlots.set(elem, slots = []);\n        }\n\n        slots.push(data.name);\n\n        if (opts.default) {\n          mapSlotsDefault.set(elem, data.name);\n        }\n      },\n\n      // If an empty value is passed in, ensure that it's an array.\n      'default': function _default() {\n        return [];\n      },\n\n      // Return any initial nodes that match the slot.\n      initial: function initial(elem, data) {\n        return [].slice.call(elem.childNodes).filter(function (ch) {\n          if (ch.getAttribute) {\n            var slot = ch.getAttribute('slot') || opts.default && data.name;\n            return slot === data.name;\n          }\n        });\n      },\n\n      // User-defined setter.\n      set: opts.set\n    };\n  }\n\n  var main = {\n    polyfill: polyfill,\n    polyfilled: polyfilled,\n    render: render,\n    slot: slot\n  };\n\n  var previousGlobal = window.skatejsNamedSlots;\n  main.noConflict = function noConflict() {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = main;\n\n  return main;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}