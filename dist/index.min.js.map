{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejsNamedSlots","this","__commonjs","fn","eachChildNode","node","func","chs","childNodes","chsLen","length","a","ret","eachNodeOrFragmentNodes","DocumentFragment","getEscapedTextContent","textNode","textContent","replace","getCommentNodeOuterHtml","commentNode","parse","html","tree","document","createElement","parsed","parser","parseFromString","body","firstChild","hasChildNodes","removeChild","appendChild","importNode","staticProp","obj","name","value","Object","defineProperty","configurable","get","arrayItem","idx","makeLikeNodeList","arr","item","getNodeType","isHostNode","isSlotNode","isRootNode","hostToRootMap","tagName","defaultShadowRootTagNameUc","findClosest","parentNode","getSlotNameFromSlot","getAttribute","getSlotNameFromNode","slotNodeIntoSlot","slot","insertBefore","nodeType","trim","assignedNodes","getAssignedNodes","shouldGoIntoContentMode","slotInsertBeforeIndex","indexOf","nodeToSlotMap","set","forEach","call","__removeChild","__insertBefore","splice","__appendChild","push","____triggerSlotChangeEvent","slotNodeFromSlot","assignedSlot","index","shouldGoIntoDefaultMode","indexOfNode","host","registerNode","eachNode","eachIndex","canPatchNativeAccessors","nodeToParentNodeMap","arrProto","unregisterNode","addNodeToNode","addNodeToHost","rootNode","slotNodes","rootToSlotMap","slotNode","addNodeToRoot","root","addSlotToRoot","querySelectorAll","slotNodesLen","addNodeToSlot","isInDefaultMode","removeNodeFromSlot","slotName","rootToHostMap","removeNodeFromNode","removeNodeFromHost","removeNodeFromRoot","removeSlotFromRoot","nodes","getRootNode","appendChildOrInsertBefore","newNode","refNode","findDescriptorFor","protos","ctor","window","proto","prototype","hasOwnProperty","getOwnPropertyDescriptor","Node","index$1","now","Date","getTime","require$$0","wait","immediate","later","last","timestamp","timeout","setTimeout","result","apply","context","args","arguments","callNow","debounce","version","WeakMap","Wm","key","delete","has","val","enumerable","Array","defaultShadowRootTagName","toUpperCase","polyfillAtRuntime","doNotOverridePropertiesInTextNodes","assignedToSlotMap","hostToModeMap","nodeToChildNodesMap","DOMParser","members","____assignedNodes","______assignedNodes","____isInFallbackMode","____slotChangeListeners","______slotChangeListeners","dispatchEvent","CustomEvent","bubbles","cancelable","addEventListener","opts","__addEventListener","attachShadow","_this","mode","Error","existingShadowRoot","lightNodes","slice","shadowRoot","polyfillShadowRootTagName","childElementCount","children","__childNodes","firstElementChild","assigned","innerHTML","getHtmlNodeOuterHtml","outerHTML","getOuterHtmlByNodeType",1,3,8,"getOuterHtml","lastChild","ch","lastElementChild","setAttribute","nextSibling","child","nextElementSibling","found","undefined","toLowerCase","attributes","map","attr","join","parentElement","__parentNode","previousSibling","previousElementSibling","removeEventListener","__removeEventListener","replaceChild","COMMENT_NODE","createTextNode","elementProto","HTMLElement","textProto","Text","keys","memberName","memberProperty","nativeDescriptor","isDefinedInTextProto","shouldOverrideInTextNode","api","freeze","default","previousGlobal","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.skatejsNamedSlots = factory());\n}(this, function () {\n\n    function __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports), module.exports; }\n\n    function eachChildNode(node, func) {\n      if (!node) {\n        return;\n      }\n\n      var chs = node.childNodes;\n      var chsLen = chs.length;\n      for (var a = 0; a < chsLen; a++) {\n        var ret = func(chs[a], a, chs);\n        if (typeof ret !== 'undefined') {\n          return ret;\n        }\n      }\n    }\n\n    function eachNodeOrFragmentNodes(node, func) {\n      if (node instanceof DocumentFragment) {\n        var chs = node.childNodes;\n        var chsLen = chs.length;\n        for (var a = 0; a < chsLen; a++) {\n          func(chs[a], a);\n        }\n      } else {\n        func(node, 0);\n      }\n    }\n\n    // Any code referring to this is because it has to work around this bug in\n    // WebKit: https://bugs.webkit.org/show_bug.cgi?id=49739\n    var canPatchNativeAccessors = !!(Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode') && Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode').get);\n\n    var index$1 = __commonjs(function (module) {\n    module.exports = Date.now || now;\n\n    function now() {\n        return new Date().getTime();\n    }\n    });\n\n    var require$$0 = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);\n\n    var index = __commonjs(function (module) {\n    /**\n     * Module dependencies.\n     */\n\n    var now = require$$0;\n\n    /**\n     * Returns a function, that, as long as it continues to be invoked, will not\n     * be triggered. The function will be called after it stops being called for\n     * N milliseconds. If `immediate` is passed, trigger the function on the\n     * leading edge, instead of the trailing.\n     *\n     * @source underscore.js\n     * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n     * @param {Function} function to wrap\n     * @param {Number} timeout in ms (`100`)\n     * @param {Boolean} whether to execute at the beginning (`false`)\n     * @api public\n     */\n\n    module.exports = function debounce(func, wait, immediate) {\n      var timeout, args, context, timestamp, result;\n      if (null == wait) wait = 100;\n\n      function later() {\n        var last = now() - timestamp;\n\n        if (last < wait && last > 0) {\n          timeout = setTimeout(later, wait - last);\n        } else {\n          timeout = null;\n          if (!immediate) {\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n          }\n        }\n      };\n\n      return function debounced() {\n        context = this;\n        args = arguments;\n        timestamp = now();\n        var callNow = immediate && !timeout;\n        if (!timeout) timeout = setTimeout(later, wait);\n        if (callNow) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n\n        return result;\n      };\n    };\n    });\n\n    var debounce = (index && typeof index === 'object' && 'default' in index ? index['default'] : index);\n\n    /**\n     * See https://w3c.github.io/DOM-Parsing/#serializing\n     * @param {TextNode}\n     * @returns {string}\n     */\n    function getEscapedTextContent(textNode) {\n      return textNode.textContent.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n\n    /**\n     * @returns {string}\n     * @param {commentNode}\n     */\n    function getCommentNodeOuterHtml(commentNode) {\n      return \"<!--\" + commentNode.textContent + \"-->\";\n    }\n\n    var version = '0.0.1';\n\n    var WeakMap = window.WeakMap || function () {\n      var index = 0;\n      function Wm() {\n        this.key = '____weak_map_' + index++;\n      }\n      Wm.prototype = {\n        delete: function _delete(obj) {\n          if (obj) {\n            delete obj[this.key];\n          }\n        },\n        get: function get(obj) {\n          return obj ? obj[this.key] : null;\n        },\n        has: function has(obj) {\n          return obj ? typeof obj[this.key] !== 'undefined' : false;\n        },\n        set: function set(obj, val) {\n          if (obj) {\n            var key = this.key;\n            if (typeof obj[key] === 'undefined') {\n              Object.defineProperty(obj, key, {\n                configurable: true,\n                enumerable: false,\n                value: val\n              });\n            } else {\n              obj[key] = val;\n            }\n          }\n        }\n      };\n      return Wm;\n    }();\n\n    var arrProto = Array.prototype;\n    var forEach = arrProto.forEach;\n\n    // We use a real DOM node for a shadow root. This is because the host node\n    // basically becomes a virtual entry point for your element leaving the shadow\n    // root the only thing that can receive instructions on how the host should\n    // render to the browser.\n\n    var defaultShadowRootTagName = '_shadow_root_';\n    var defaultShadowRootTagNameUc = defaultShadowRootTagName.toUpperCase();\n\n    // * WebKit only *\n    //\n    // These members we need cannot override as we require native access to their\n    // original values at some point.\n    var polyfillAtRuntime = ['childNodes', 'parentNode'];\n\n    // These are the protos that we need to search for native descriptors on.\n    var protos = ['Node', 'Element', 'EventTarget'];\n\n    //some properties that should not be overridden in the Text prototype\n    var doNotOverridePropertiesInTextNodes = ['textContent'];\n\n    // Private data stores.\n    var assignedToSlotMap = new WeakMap();\n    var hostToModeMap = new WeakMap();\n    var hostToRootMap = new WeakMap();\n    var nodeToChildNodesMap = new WeakMap();\n    var nodeToParentNodeMap = new WeakMap();\n    var nodeToSlotMap = new WeakMap();\n    var rootToHostMap = new WeakMap();\n    var rootToSlotMap = new WeakMap();\n\n    // * WebKit only *\n    //\n    // We require some way to parse HTML natively because we can't use the native\n    // accessors.\n\n    var parser = new DOMParser();\n    function parse(html) {\n      var tree = document.createElement('div');\n      var parsed = parser.parseFromString('<div>' + html + '</div>', 'text/html').body.firstChild;\n      while (parsed.hasChildNodes()) {\n        var firstChild = parsed.firstChild;\n        parsed.removeChild(firstChild);\n        tree.appendChild(firstChild);\n      }\n      // Need to import the node to initialise the custom elements from the parser.\n      return document.importNode(tree, true);\n    }\n\n    function staticProp(obj, name, value) {\n      Object.defineProperty(obj, name, {\n        configurable: true,\n        get: function get() {\n          return value;\n        }\n      });\n    }\n\n    // Slotting helpers.\n\n    function arrayItem(idx) {\n      return this[idx];\n    }\n\n    function makeLikeNodeList(arr) {\n      arr.item = arrayItem;\n      return arr;\n    }\n\n    function getNodeType(node) {\n      if (isHostNode(node)) {\n        return 'host';\n      }\n\n      if (isSlotNode(node)) {\n        return 'slot';\n      }\n\n      if (isRootNode(node)) {\n        return 'root';\n      }\n\n      return 'node';\n    }\n\n    function isHostNode(node) {\n      return !!hostToRootMap.get(node);\n    }\n\n    function isSlotNode(node) {\n      return node.tagName === 'SLOT';\n    }\n\n    function isRootNode(node) {\n      return node.tagName === defaultShadowRootTagNameUc;\n    }\n\n    function findClosest(node, func) {\n      while (node) {\n        if (node === document) {\n          break;\n        }\n        if (func(node)) {\n          return node;\n        }\n        node = node.parentNode;\n      }\n    }\n\n    function getSlotNameFromSlot(node) {\n      return node.getAttribute && node.getAttribute('name') || 'default';\n    }\n\n    function getSlotNameFromNode(node) {\n      return node.getAttribute && node.getAttribute('slot') || 'default';\n    }\n\n    function slotNodeIntoSlot(slot, node, insertBefore) {\n      // Don't slot nodes that have content but are only whitespace. This is an\n      // anomaly that I don't think the spec deals with.\n      //\n      // The problem is:\n      //\n      // - If you insert HTML with indentation into the page, there will be\n      //   whitespace and if that's inserted it messes with fallback content\n      //   calculation where there is formatting, but no meaningful content, so in\n      //   theory it should fallback. Since you can attach a shadow root after we\n      //   mean to insert an empty text node and have it \"count\", we can't really\n      //   discard nodes that are considered formatting at the time of attachment.\n      // - You can insert a text node and modify its text content later.\n      //   Incremental DOM seems to do this. Every way I look at it, it seems\n      //   problematic that we should have to screen for content, but I don't seems\n      //   much of a way around it at the moment.\n      if (node.nodeType === 3 && node.textContent && node.textContent.trim().length === 0) {\n        return;\n      }\n\n      var assignedNodes = slot.getAssignedNodes();\n      var shouldGoIntoContentMode = assignedNodes.length === 0;\n      var slotInsertBeforeIndex = assignedNodes.indexOf(insertBefore);\n\n      // Assign the slot to the node internally.\n      nodeToSlotMap.set(node, slot);\n\n      // Remove the fallback content and state if we're going into content mode.\n      if (shouldGoIntoContentMode) {\n        forEach.call(slot.childNodes, function (node) {\n          return slot.__removeChild(node);\n        });\n      }\n\n      if (slotInsertBeforeIndex > -1) {\n        slot.__insertBefore(node, insertBefore);\n        assignedNodes.splice(slotInsertBeforeIndex, 0, node);\n      } else {\n        slot.__appendChild(node);\n        assignedNodes.push(node);\n      }\n\n      slot.____triggerSlotChangeEvent();\n    }\n\n    function slotNodeFromSlot(node) {\n      var slot = node.assignedSlot;\n\n      if (slot) {\n        var assignedNodes = slot.getAssignedNodes();\n        var index = assignedNodes.indexOf(node);\n\n        if (index > -1) {\n          var shouldGoIntoDefaultMode = assignedNodes.length === 1;\n\n          assignedNodes.splice(index, 1);\n          nodeToSlotMap.set(node, null);\n\n          // Actually remove the child.\n          slot.__removeChild(node);\n\n          // If this was the last slotted node, then insert fallback content.\n          if (shouldGoIntoDefaultMode) {\n            forEach.call(slot.childNodes, function (node) {\n              return slot.__appendChild(node);\n            });\n          }\n\n          slot.____triggerSlotChangeEvent();\n        }\n      }\n    }\n\n    // Returns the index of the node in the host's childNodes.\n    function indexOfNode(host, node) {\n      var chs = host.childNodes;\n      var chsLen = chs.length;\n      for (var a = 0; a < chsLen; a++) {\n        if (chs[a] === node) {\n          return a;\n        }\n      }\n      return -1;\n    }\n\n    // Adds the node to the list of childNodes on the host and fakes any necessary\n    // information such as parentNode.\n    function registerNode(host, node, insertBefore, func) {\n      var index = indexOfNode(host, insertBefore);\n      eachNodeOrFragmentNodes(node, function (eachNode, eachIndex) {\n        func(eachNode, eachIndex);\n\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(eachNode, host);\n        } else {\n          staticProp(eachNode, 'parentNode', host);\n        }\n\n        if (index > -1) {\n          arrProto.splice.call(host.childNodes, index + eachIndex, 0, eachNode);\n        } else {\n          arrProto.push.call(host.childNodes, eachNode);\n        }\n      });\n    }\n\n    // Cleans up registerNode().\n    function unregisterNode(host, node, func) {\n      var index = indexOfNode(host, node);\n      if (index > -1) {\n        func(node, 0);\n\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(node, null);\n        } else {\n          staticProp(node, 'parentNode', null);\n        }\n\n        arrProto.splice.call(host.childNodes, index, 1);\n      }\n    }\n\n    function addNodeToNode(host, node, insertBefore) {\n      registerNode(host, node, insertBefore, function (eachNode) {\n        host.__insertBefore(eachNode, insertBefore);\n      });\n    }\n\n    function addNodeToHost(host, node, insertBefore) {\n      registerNode(host, node, insertBefore, function (eachNode) {\n        var rootNode = hostToRootMap.get(host);\n        var slotNodes = rootToSlotMap.get(rootNode);\n        var slotNode = slotNodes[getSlotNameFromNode(eachNode)];\n        if (slotNode) {\n          slotNodeIntoSlot(slotNode, eachNode, insertBefore);\n        }\n      });\n    }\n\n    function addNodeToRoot(root, node, insertBefore) {\n      eachNodeOrFragmentNodes(node, function (node) {\n        if (isSlotNode(node)) {\n          addSlotToRoot(root, node);\n        } else {\n          var slotNodes = node.querySelectorAll && node.querySelectorAll('slot');\n          if (slotNodes) {\n            var slotNodesLen = slotNodes.length;\n            for (var a = 0; a < slotNodesLen; a++) {\n              addSlotToRoot(root, slotNodes[a]);\n            }\n          }\n        }\n      });\n      addNodeToNode(root, node, insertBefore);\n    }\n\n    // Adds a node to a slot. In other words, adds default content to a slot. It\n    // ensures that if the slot doesn't have any assigned nodes yet, that the node\n    // is actually displayed, otherwise it's just registered as child content.\n    function addNodeToSlot(slot, node, insertBefore) {\n      var isInDefaultMode = slot.getAssignedNodes().length === 0;\n      registerNode(slot, node, insertBefore, function (eachNode) {\n        if (isInDefaultMode) {\n          slot.__insertBefore(eachNode, insertBefore);\n        }\n      });\n    }\n\n    // Removes a node from a slot (default content). It ensures that if the slot\n    // doesn't have any assigned nodes yet, that the node is actually removed,\n    // otherwise it's just unregistered.\n    function removeNodeFromSlot(slot, node) {\n      var isInDefaultMode = slot.getAssignedNodes().length === 0;\n      unregisterNode(slot, node, function () {\n        if (isInDefaultMode) {\n          slot.__removeChild(node);\n        }\n      });\n    }\n\n    function addSlotToRoot(root, slot) {\n      var slotName = getSlotNameFromSlot(slot);\n\n      // Ensure a slot node's childNodes are overridden at the earliest point\n      // possible for WebKit.\n      if (!canPatchNativeAccessors && !slot.childNodes.push) {\n        staticProp(slot, 'childNodes', []);\n      }\n\n      rootToSlotMap.get(root)[slotName] = slot;\n      eachChildNode(rootToHostMap.get(root), function (eachNode) {\n        if (!eachNode.assignedSlot && slotName === getSlotNameFromNode(eachNode)) {\n          slotNodeIntoSlot(slot, eachNode);\n        }\n      });\n    }\n\n    function removeNodeFromNode(host, node) {\n      unregisterNode(host, node, function () {\n        host.__removeChild(node);\n      });\n    }\n\n    function removeNodeFromHost(host, node) {\n      unregisterNode(host, node, function () {\n        slotNodeFromSlot(node);\n      });\n    }\n\n    function removeNodeFromRoot(root, node) {\n      unregisterNode(root, node, function () {\n        if (isSlotNode(node)) {\n          removeSlotFromRoot(root, node);\n        } else {\n          var nodes = node.querySelectorAll && node.querySelectorAll('slot');\n          for (var a = 0; a < nodes.length; a++) {\n            removeSlotFromRoot(root, nodes[a]);\n          }\n        }\n      });\n    }\n\n    function removeSlotFromRoot(root, node) {\n      node.getAssignedNodes().forEach(slotNodeFromSlot);\n      delete rootToSlotMap.get(root)[getSlotNameFromSlot(node)];\n    }\n\n    // TODO terribly inefficient\n    function getRootNode(host) {\n      if (isRootNode(host)) {\n        return host;\n      } else {\n        if (!host.parentNode) {\n          return;\n        }\n\n        return getRootNode(host.parentNode);\n      }\n    }\n\n    function appendChildOrInsertBefore(host, newNode, refNode) {\n      var nodeType = getNodeType(host);\n      var parentNode = newNode.parentNode;\n      var rootNode = getRootNode(host);\n\n      // Ensure childNodes is patched so we can manually update it for WebKit.\n      if (!canPatchNativeAccessors && !host.childNodes.push) {\n        staticProp(host, 'childNodes', []);\n      }\n\n      if (rootNode && getNodeType(newNode) === 'slot') {\n        addSlotToRoot(rootNode, newNode);\n      }\n\n      // If we append a child to a host, the host tells the shadow root to distribute\n      // it. If the root decides it doesn't need to be distributed, it is never\n      // removed from the old parent because in polyfill land we store a reference\n      // to the node but we don't move it. Due to that, we must explicitly remove the\n      // node from its old parent.\n      if (parentNode && getNodeType(parentNode) === 'host') {\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(newNode, null);\n        } else {\n          staticProp(newNode, 'parentNode', null);\n        }\n      }\n\n      if (nodeType === 'node') {\n        if (canPatchNativeAccessors) {\n          return host.__insertBefore(newNode, refNode);\n        } else {\n          return addNodeToNode(host, newNode, refNode);\n        }\n      }\n\n      if (nodeType === 'slot') {\n        return addNodeToSlot(host, newNode, refNode);\n      }\n\n      if (nodeType === 'host') {\n        return addNodeToHost(host, newNode, refNode);\n      }\n\n      if (nodeType === 'root') {\n        return addNodeToRoot(host, newNode, refNode);\n      }\n    }\n\n    var members = {\n      // For testing purposes.\n      ____assignedNodes: {\n        get: function get() {\n          return this.______assignedNodes || (this.______assignedNodes = []);\n        }\n      },\n\n      // For testing purposes.\n      ____isInFallbackMode: {\n        get: function get() {\n          return this.getAssignedNodes().length === 0;\n        }\n      },\n\n      ____slotChangeListeners: {\n        get: function get() {\n          if (typeof this.______slotChangeListeners === 'undefined') {\n            this.______slotChangeListeners = 0;\n          }\n          return this.______slotChangeListeners;\n        },\n        set: function set(value) {\n          this.______slotChangeListeners = value;\n        }\n      },\n      ____triggerSlotChangeEvent: {\n        value: debounce(function () {\n          if (this.____slotChangeListeners) {\n            this.dispatchEvent(new CustomEvent('slotchange', {\n              bubbles: false,\n              cancelable: false\n            }));\n          }\n        })\n      },\n      addEventListener: {\n        value: function value(name, func, opts) {\n          if (name === 'slotchange' && isSlotNode(this)) {\n            this.____slotChangeListeners++;\n          }\n          return this.__addEventListener(name, func, opts);\n        }\n      },\n      appendChild: {\n        value: function value(newNode) {\n          return appendChildOrInsertBefore(this, newNode);\n        }\n      },\n      assignedSlot: {\n        get: function get() {\n          return nodeToSlotMap.get(this) || null;\n        }\n      },\n      attachShadow: {\n        value: function value(opts) {\n          var _this = this;\n\n          var mode = opts && opts.mode;\n          if (mode !== 'closed' && mode !== 'open') {\n            throw new Error('You must specify { mode } as \"open\" or \"closed\" to attachShadow().');\n          }\n\n          // Return the existing shadow root if it exists.\n          var existingShadowRoot = hostToRootMap.get(this);\n          if (existingShadowRoot) {\n            return existingShadowRoot;\n          }\n\n          var lightNodes = makeLikeNodeList([].slice.call(this.childNodes));\n          var shadowRoot = document.createElement(opts.polyfillShadowRootTagName || defaultShadowRootTagName);\n\n          // Host and shadow root data.\n          hostToModeMap.set(this, mode);\n          hostToRootMap.set(this, shadowRoot);\n          rootToHostMap.set(shadowRoot, this);\n          rootToSlotMap.set(shadowRoot, {});\n\n          if (canPatchNativeAccessors) {\n            nodeToChildNodesMap.set(this, lightNodes);\n          } else {\n            staticProp(this, 'childNodes', lightNodes);\n          }\n\n          // Process light DOM.\n          lightNodes.forEach(function (node) {\n            // Existing children should be removed from being displayed, but still\n            // appear to be child nodes. This is how light DOM works; they're still\n            // child nodes but not in the composed DOM yet as there won't be any\n            // slots for them to go into.\n            _this.__removeChild(node);\n\n            // We must register the parentNode here as this has the potential to\n            // become out of sync if the node is moved before being slotted.\n            if (canPatchNativeAccessors) {\n              nodeToParentNodeMap.set(node, _this);\n            } else {\n              staticProp(node, 'parentNode', _this);\n            }\n          });\n\n          // The shadow root is actually the only child of the host.\n          return this.__appendChild(shadowRoot);\n        }\n      },\n      childElementCount: {\n        get: function get() {\n          return this.children.length;\n        }\n      },\n      childNodes: {\n        get: function get() {\n          if (canPatchNativeAccessors && getNodeType(this) === 'node') {\n            return this.__childNodes;\n          }\n          var childNodes = nodeToChildNodesMap.get(this);\n          childNodes || nodeToChildNodesMap.set(this, childNodes = makeLikeNodeList([]));\n          return childNodes;\n        }\n      },\n      children: {\n        get: function get() {\n          var chs = [];\n          eachChildNode(this, function (node) {\n            if (node.nodeType === 1) {\n              chs.push(node);\n            }\n          });\n          return makeLikeNodeList(chs);\n        }\n      },\n      firstChild: {\n        get: function get() {\n          return this.childNodes[0] || null;\n        }\n      },\n      firstElementChild: {\n        get: function get() {\n          return this.children[0] || null;\n        }\n      },\n      getAssignedNodes: {\n        value: function value() {\n          if (isSlotNode(this)) {\n            var assigned = assignedToSlotMap.get(this);\n            assigned || assignedToSlotMap.set(this, assigned = []);\n            return assigned;\n          }\n        }\n      },\n      hasChildNodes: {\n        value: function value() {\n          return this.childNodes.length > 0;\n        }\n      },\n      innerHTML: {\n        get: function get() {\n          var innerHTML = '';\n\n          var getHtmlNodeOuterHtml = function getHtmlNodeOuterHtml(node) {\n            return node.outerHTML;\n          };\n          var getOuterHtmlByNodeType = {\n            1: getHtmlNodeOuterHtml,\n            3: getEscapedTextContent,\n            8: getCommentNodeOuterHtml\n          };\n\n          eachChildNode(this, function (node) {\n            var getOuterHtml = getOuterHtmlByNodeType[node.nodeType] || getHtmlNodeOuterHtml;\n            innerHTML += getOuterHtml(node);\n          });\n          return innerHTML;\n        },\n        set: function set(innerHTML) {\n          var parsed = parse(innerHTML);\n\n          while (this.hasChildNodes()) {\n            this.removeChild(this.firstChild);\n          }\n\n          while (parsed.hasChildNodes()) {\n            var firstChild = parsed.firstChild;\n\n            // When we polyfill everything on HTMLElement.prototype, we overwrite\n            // properties. This makes it so that parentNode reports null even though\n            // it's actually a parent of the HTML parser. For this reason,\n            // cleanNode() won't work and we must manually remove it from the\n            // parser before it is moved to the host just in case it's added as a\n            // light node but not assigned to a slot.\n            parsed.removeChild(firstChild);\n\n            this.appendChild(firstChild);\n          }\n        }\n      },\n      insertBefore: {\n        value: function value(newNode, refNode) {\n          return appendChildOrInsertBefore(this, newNode, refNode);\n        }\n      },\n      lastChild: {\n        get: function get() {\n          var ch = this.childNodes;\n          return ch[ch.length - 1] || null;\n        }\n      },\n      lastElementChild: {\n        get: function get() {\n          var ch = this.children;\n          return ch[ch.length - 1] || null;\n        }\n      },\n      name: {\n        get: function get() {\n          return this.getAttribute('name');\n        },\n        set: function set(name) {\n          return this.setAttribute('name', name);\n        }\n      },\n      nextSibling: {\n        get: function get() {\n          var host = this;\n          return eachChildNode(this.parentNode, function (child, index, nodes) {\n            if (host === child) {\n              return nodes[index + 1] || null;\n            }\n          });\n        }\n      },\n      nextElementSibling: {\n        get: function get() {\n          var host = this;\n          var found = undefined;\n          return eachChildNode(this.parentNode, function (child) {\n            if (found && child.nodeType === 1) {\n              return child;\n            }\n            if (host === child) {\n              found = true;\n            }\n          });\n        }\n      },\n      outerHTML: {\n        get: function get() {\n          var name = this.tagName.toLowerCase();\n          var attributes = Array.prototype.slice.call(this.attributes).map(function (attr) {\n            return ' ' + attr.name + (attr.value ? '=\"' + attr.value + '\"' : '');\n          }).join('');\n          return '<' + name + attributes + '>' + this.innerHTML + '</' + name + '>';\n        }\n      },\n      parentElement: {\n        get: function get() {\n          return findClosest(this.parentNode, function (node) {\n            return node.nodeType === 1;\n          });\n        }\n      },\n      parentNode: {\n        get: function get() {\n          return nodeToParentNodeMap.get(this) || this.__parentNode || null;\n        }\n      },\n      previousSibling: {\n        get: function get() {\n          var host = this;\n          return eachChildNode(this.parentNode, function (child, index, nodes) {\n            if (host === child) {\n              return nodes[index - 1] || null;\n            }\n          });\n        }\n      },\n      previousElementSibling: {\n        get: function get() {\n          var host = this;\n          var found = undefined;\n          return eachChildNode(this.parentNode, function (child) {\n            if (found && host === child) {\n              return found;\n            }\n            if (child.nodeType === 1) {\n              found = child;\n            }\n          });\n        }\n      },\n      removeChild: {\n        value: function value(refNode) {\n          var nodeType = getNodeType(this);\n\n          if (nodeType === 'node') {\n            if (canPatchNativeAccessors) {\n              return this.__removeChild(refNode);\n            } else {\n              return removeNodeFromNode(this, refNode);\n            }\n          }\n\n          if (nodeType === 'slot') {\n            return removeNodeFromSlot(this, refNode);\n          }\n\n          if (nodeType === 'host') {\n            return removeNodeFromHost(this, refNode);\n          }\n\n          if (nodeType === 'root') {\n            return removeNodeFromRoot(this, refNode);\n          }\n        }\n      },\n      removeEventListener: {\n        value: function value(name, func, opts) {\n          if (name === 'slotchange' && this.____slotChangeListeners && isSlotNode(this)) {\n            this.____slotChangeListeners--;\n          }\n          return this.__removeEventListener(name, func, opts);\n        }\n      },\n      replaceChild: {\n        value: function value(newNode, refNode) {\n          this.insertBefore(newNode, refNode);\n          return this.removeChild(refNode);\n        }\n      },\n      shadowRoot: {\n        get: function get() {\n          return hostToModeMap.get(this) === 'open' ? hostToRootMap.get(this) : null;\n        }\n      },\n      textContent: {\n        get: function get() {\n          var textContent = '';\n          eachChildNode(this, function (node) {\n            if (node.nodeType !== Node.COMMENT_NODE) {\n              textContent += node.textContent;\n            }\n          });\n          return textContent;\n        },\n        set: function set(textContent) {\n          while (this.hasChildNodes()) {\n            this.removeChild(this.firstChild);\n          }\n          this.appendChild(document.createTextNode(textContent));\n        }\n      }\n    };\n\n    function findDescriptorFor(name) {\n      for (var a = 0; a < protos.length; a++) {\n        var ctor = window[protos[a]];\n        if (!ctor) {\n          continue;\n        }\n        var proto = ctor.prototype;\n        if (proto.hasOwnProperty(name)) {\n          return Object.getOwnPropertyDescriptor(proto, name);\n        }\n      }\n    }\n\n    if (!('attachShadow' in document.createElement('div'))) {\n      (function () {\n        var elementProto = HTMLElement.prototype;\n        var textProto = Text.prototype;\n        Object.keys(members).forEach(function (memberName) {\n          var memberProperty = members[memberName];\n\n          // All properties should be configurable.\n          memberProperty.configurable = true;\n\n          // Polyfill as much as we can and work around WebKit in other areas.\n          if (canPatchNativeAccessors || polyfillAtRuntime.indexOf(memberName) === -1) {\n            var nativeDescriptor = findDescriptorFor(memberName);\n            Object.defineProperty(elementProto, memberName, memberProperty);\n            var isDefinedInTextProto = memberName in textProto;\n            var shouldOverrideInTextNode = doNotOverridePropertiesInTextNodes.indexOf(memberName) === -1;\n            if (isDefinedInTextProto && shouldOverrideInTextNode) {\n              Object.defineProperty(textProto, memberName, memberProperty);\n            }\n            if (nativeDescriptor && nativeDescriptor.configurable) {\n              Object.defineProperty(elementProto, '__' + memberName, nativeDescriptor);\n              if (isDefinedInTextProto && shouldOverrideInTextNode) {\n                Object.defineProperty(textProto, '__' + memberName, nativeDescriptor);\n              }\n            }\n          }\n        });\n      })();\n    }\n\n\n\n    var api = Object.freeze({\n      default: version\n    });\n\n    var previousGlobal = window.skatejsNamedSlots;\n    version.noConflict = function noConflict() {\n      window.skatejsNamedSlots = previousGlobal;\n      return this;\n    };\n    window.skatejsNamedSlots = version;\n    for (var name in api) {\n      version[name] = api[name];\n    }\n    version.version = '0.1.8';\n\n    return version;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}