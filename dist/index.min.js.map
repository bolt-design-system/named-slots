{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejsNamedSlots","this","__commonjs","fn","eachChildNode","node","func","chs","childNodes","chsLen","length","a","ret","eachNodeOrFragmentNodes","DocumentFragment","getEscapedTextContent","textNode","textContent","replace","getCommentNodeOuterHtml","commentNode","parse","html","tree","document","createElement","parsed","parser","parseFromString","body","firstChild","hasChildNodes","removeChild","appendChild","importNode","staticProp","obj","name","value","Object","defineProperty","configurable","get","arrayItem","idx","makeLikeNodeList","arr","item","getNodeType","isHostNode","isSlotNode","isRootNode","hostToRootMap","tagName","defaultShadowRootTagNameUc","findClosest","parentNode","getSlotNameFromSlot","getAttribute","getSlotNameFromNode","slotNodeIntoSlot","slot","insertBefore","assignedNodes","getAssignedNodes","slotInsertBeforeIndex","indexOf","nodeType","trim","nodeToSlotMap","set","slotToModeMap","slice","call","forEach","fallbackNode","__removeChild","shouldAffectSlot","__insertBefore","splice","__appendChild","push","____triggerSlotChangeEvent","slotNodeFromSlot","assignedSlot","index","indexOfNode","host","registerNode","eachNode","eachIndex","canPatchNativeAccessors","nodeToParentNodeMap","arrProto","unregisterNode","addNodeToNode","addNodeToHost","rootNode","slotNodes","rootToSlotMap","slotNode","addNodeToRoot","root","addSlotToRoot","querySelectorAll","slotNodesLen","slotName","rootToHostMap","removeNodeFromNode","removeNodeFromHost","removeNodeFromRoot","removeSlotFromRoot","nodes","getRootNode","appendChildOrInsertBefore","newNode","refNode","findDescriptorFor","protos","ctor","window","proto","prototype","hasOwnProperty","getOwnPropertyDescriptor","Node","index$1","now","Date","getTime","require$$0","wait","immediate","later","last","timestamp","timeout","setTimeout","result","apply","context","args","arguments","callNow","debounce","version","WeakMap","Wm","key","delete","has","val","enumerable","Array","defaultShadowRootTagName","toUpperCase","polyfillAtRuntime","doNotOverridePropertiesInTextNodes","assignedToSlotMap","hostToModeMap","nodeToChildNodesMap","DOMParser","members","____assignedNodes","______assignedNodes","____isInFallbackMode","____slotChangeListeners","______slotChangeListeners","dispatchEvent","CustomEvent","bubbles","cancelable","addEventListener","opts","__addEventListener","attachShadow","mode","Error","existingShadowRoot","lightNodes","shadowRoot","polyfillShadowRootTagName","childElementCount","children","__childNodes","firstElementChild","assigned","innerHTML","getHtmlNodeOuterHtml","outerHTML","getOuterHtmlByNodeType",1,3,8,"getOuterHtml","lastChild","ch","lastElementChild","setAttribute","nextSibling","child","nextElementSibling","found","undefined","toLowerCase","attributes","map","attr","join","parentElement","__parentNode","previousSibling","previousElementSibling","removeEventListener","__removeEventListener","replaceChild","COMMENT_NODE","createTextNode","elementProto","HTMLElement","textProto","Text","keys","memberName","memberProperty","nativeDescriptor","isDefinedInTextProto","shouldOverrideInTextNode","api","freeze","default","previousGlobal","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.skatejsNamedSlots = factory());\n}(this, function () {\n\n    function __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports), module.exports; }\n\n    function eachChildNode(node, func) {\n      if (!node) {\n        return;\n      }\n\n      var chs = node.childNodes;\n      var chsLen = chs.length;\n      for (var a = 0; a < chsLen; a++) {\n        var ret = func(chs[a], a, chs);\n        if (typeof ret !== 'undefined') {\n          return ret;\n        }\n      }\n    }\n\n    function eachNodeOrFragmentNodes(node, func) {\n      if (node instanceof DocumentFragment) {\n        var chs = node.childNodes;\n        var chsLen = chs.length;\n        for (var a = 0; a < chsLen; a++) {\n          func(chs[a], a);\n        }\n      } else {\n        func(node, 0);\n      }\n    }\n\n    // Any code referring to this is because it has to work around this bug in\n    // WebKit: https://bugs.webkit.org/show_bug.cgi?id=49739\n    var canPatchNativeAccessors = !!(Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode') && Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode').get);\n\n    var index$1 = __commonjs(function (module) {\n    module.exports = Date.now || now;\n\n    function now() {\n        return new Date().getTime();\n    }\n    });\n\n    var require$$0 = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);\n\n    var index = __commonjs(function (module) {\n    /**\n     * Module dependencies.\n     */\n\n    var now = require$$0;\n\n    /**\n     * Returns a function, that, as long as it continues to be invoked, will not\n     * be triggered. The function will be called after it stops being called for\n     * N milliseconds. If `immediate` is passed, trigger the function on the\n     * leading edge, instead of the trailing.\n     *\n     * @source underscore.js\n     * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n     * @param {Function} function to wrap\n     * @param {Number} timeout in ms (`100`)\n     * @param {Boolean} whether to execute at the beginning (`false`)\n     * @api public\n     */\n\n    module.exports = function debounce(func, wait, immediate) {\n      var timeout, args, context, timestamp, result;\n      if (null == wait) wait = 100;\n\n      function later() {\n        var last = now() - timestamp;\n\n        if (last < wait && last > 0) {\n          timeout = setTimeout(later, wait - last);\n        } else {\n          timeout = null;\n          if (!immediate) {\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n          }\n        }\n      };\n\n      return function debounced() {\n        context = this;\n        args = arguments;\n        timestamp = now();\n        var callNow = immediate && !timeout;\n        if (!timeout) timeout = setTimeout(later, wait);\n        if (callNow) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n\n        return result;\n      };\n    };\n    });\n\n    var debounce = (index && typeof index === 'object' && 'default' in index ? index['default'] : index);\n\n    /**\n     * See https://w3c.github.io/DOM-Parsing/#serializing\n     * @param {TextNode}\n     * @returns {string}\n     */\n    function getEscapedTextContent(textNode) {\n      return textNode.textContent.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n\n    /**\n     * @returns {string}\n     * @param {commentNode}\n     */\n    function getCommentNodeOuterHtml(commentNode) {\n      return \"<!--\" + commentNode.textContent + \"-->\";\n    }\n\n    var version = '0.0.1';\n\n    var WeakMap = window.WeakMap || function () {\n      var index = 0;\n      function Wm() {\n        this.key = '____weak_map_' + index++;\n      }\n      Wm.prototype = {\n        delete: function _delete(obj) {\n          if (obj) {\n            delete obj[this.key];\n          }\n        },\n        get: function get(obj) {\n          return obj ? obj[this.key] : null;\n        },\n        has: function has(obj) {\n          return obj ? typeof obj[this.key] !== 'undefined' : false;\n        },\n        set: function set(obj, val) {\n          if (obj) {\n            var key = this.key;\n            if (typeof obj[key] === 'undefined') {\n              Object.defineProperty(obj, key, {\n                configurable: true,\n                enumerable: false,\n                value: val\n              });\n            } else {\n              obj[key] = val;\n            }\n          }\n        }\n      };\n      return Wm;\n    }();\n\n    var arrProto = Array.prototype;\n\n    // We use a real DOM node for a shadow root. This is because the host node\n    // basically becomes a virtual entry point for your element leaving the shadow\n    // root the only thing that can receive instructions on how the host should\n    // render to the browser.\n    var defaultShadowRootTagName = '_shadow_root_';\n    var defaultShadowRootTagNameUc = defaultShadowRootTagName.toUpperCase();\n\n    // * WebKit only *\n    //\n    // These members we need cannot override as we require native access to their\n    // original values at some point.\n    var polyfillAtRuntime = ['childNodes', 'parentNode'];\n\n    // These are the protos that we need to search for native descriptors on.\n    var protos = ['Node', 'Element', 'EventTarget'];\n\n    //some properties that should not be overridden in the Text prototype\n    var doNotOverridePropertiesInTextNodes = ['textContent'];\n\n    // Private data stores.\n    var assignedToSlotMap = new WeakMap();\n    var hostToModeMap = new WeakMap();\n    var hostToRootMap = new WeakMap();\n    var nodeToChildNodesMap = new WeakMap();\n    var nodeToParentNodeMap = new WeakMap();\n    var nodeToSlotMap = new WeakMap();\n    var rootToHostMap = new WeakMap();\n    var rootToSlotMap = new WeakMap();\n    var slotToModeMap = new WeakMap();\n\n    // * WebKit only *\n    //\n    // We require some way to parse HTML natively because we can't use the native\n    // accessors.\n\n    var parser = new DOMParser();\n    function parse(html) {\n      var tree = document.createElement('div');\n      var parsed = parser.parseFromString('<div>' + html + '</div>', 'text/html').body.firstChild;\n      while (parsed.hasChildNodes()) {\n        var firstChild = parsed.firstChild;\n        parsed.removeChild(firstChild);\n        tree.appendChild(firstChild);\n      }\n      return document.importNode(tree, true); // Need to import the node to initialise the custom elements from the parser\n    }\n\n    function staticProp(obj, name, value) {\n      Object.defineProperty(obj, name, {\n        configurable: true,\n        get: function get() {\n          return value;\n        }\n      });\n    }\n\n    // Slotting helpers.\n\n    function arrayItem(idx) {\n      return this[idx];\n    }\n\n    function makeLikeNodeList(arr) {\n      arr.item = arrayItem;\n      return arr;\n    }\n\n    function getNodeType(node) {\n      if (isHostNode(node)) {\n        return 'host';\n      }\n\n      if (isSlotNode(node)) {\n        return 'slot';\n      }\n\n      if (isRootNode(node)) {\n        return 'root';\n      }\n\n      return 'node';\n    }\n\n    function isHostNode(node) {\n      return !!hostToRootMap.get(node);\n    }\n\n    function isSlotNode(node) {\n      return node.tagName === 'SLOT';\n    }\n\n    function isRootNode(node) {\n      return node.tagName === defaultShadowRootTagNameUc;\n    }\n\n    function findClosest(node, func) {\n      while (node) {\n        if (node === document) {\n          break;\n        }\n        if (func(node)) {\n          return node;\n        }\n        node = node.parentNode;\n      }\n    }\n\n    function getSlotNameFromSlot(node) {\n      return node.getAttribute && node.getAttribute('name') || 'default';\n    }\n\n    function getSlotNameFromNode(node) {\n      return node.getAttribute && node.getAttribute('slot') || 'default';\n    }\n\n    function slotNodeIntoSlot(slot, node, insertBefore) {\n      var assignedNodes = slot.getAssignedNodes();\n      var slotInsertBeforeIndex = assignedNodes.indexOf(insertBefore);\n\n      // Don't slot nodes that have content but are only whitespace. This is an\n      // anomaly that I don't think the spec deals with.\n      //\n      // The problem is:\n      //\n      // - If you insert HTML with indentation into the page, there will be\n      //   whitespace and if that's inserted it messes with fallback content\n      //   calculation where there is formatting, but no meaningful content, so in\n      //   theory it should fallback. Since you can attach a shadow root after we\n      //   mean to insert an empty text node and have it \"count\", we can't really\n      //   discard nodes that are considered formatting at the time of attachment.\n      // - You can insert a text node and modify its text content later.\n      //   Incremental DOM seems to do this. Every way I look at it, it seems\n      //   problematic that we should have to screen for content, but I don't seems\n      //   much of a way around it at the moment.\n      if (node.nodeType === 3 && node.textContent && node.textContent.trim().length === 0) {\n        return;\n      }\n\n      nodeToSlotMap.set(node, slot);\n\n      // If there's currently no assigned nodes, there will be, so remove all fallback content.\n      if (!assignedNodes.length) {\n        slotToModeMap.set(slot, false);\n        [].slice.call(slot.childNodes).forEach(function (fallbackNode) {\n          return slot.__removeChild(fallbackNode);\n        });\n      }\n\n      var shouldAffectSlot = !slotToModeMap.get(slot);\n\n      if (slotInsertBeforeIndex > -1) {\n        if (shouldAffectSlot) {\n          slot.__insertBefore(node, insertBefore);\n        }\n\n        assignedNodes.splice(slotInsertBeforeIndex, 0, node);\n      } else {\n        if (shouldAffectSlot) {\n          slot.__appendChild(node);\n        }\n\n        assignedNodes.push(node);\n      }\n\n      slot.____triggerSlotChangeEvent();\n    }\n\n    function slotNodeFromSlot(node) {\n      var slot = node.assignedSlot;\n\n      if (slot) {\n        var assignedNodes = slot.getAssignedNodes();\n        var index = assignedNodes.indexOf(node);\n\n        if (index > -1) {\n          assignedNodes.splice(index, 1);\n          nodeToSlotMap.set(node, null);\n\n          var shouldAffectSlot = !slotToModeMap.get(slot);\n\n          // We only update the actual DOM representation if we're displaying\n          // slotted nodes.\n          if (shouldAffectSlot) {\n            slot.__removeChild(node);\n          }\n\n          // If this was the last slotted node, then insert fallback content.\n          if (!assignedNodes.length) {\n            slotToModeMap.set(slot, true);\n            eachChildNode(slot, function (node) {\n              slot.__appendChild(node);\n            });\n          }\n\n          slot.____triggerSlotChangeEvent();\n        }\n      }\n    }\n\n    function indexOfNode(host, node) {\n      var chs = host.childNodes;\n      var chsLen = chs.length;\n      for (var a = 0; a < chsLen; a++) {\n        if (chs[a] === node) {\n          return a;\n        }\n      }\n      return -1;\n    }\n\n    // Adds the node to the list of childNodes on the host and fakes any necessary\n    // information such as parentNode.\n    function registerNode(host, node, insertBefore, func) {\n      var index = indexOfNode(host, insertBefore);\n      eachNodeOrFragmentNodes(node, function (eachNode, eachIndex) {\n        func(eachNode, eachIndex);\n\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(eachNode, host);\n        } else {\n          staticProp(eachNode, 'parentNode', host);\n        }\n\n        if (index > -1) {\n          arrProto.splice.call(host.childNodes, index + eachIndex, 0, eachNode);\n        } else {\n          arrProto.push.call(host.childNodes, eachNode);\n        }\n      });\n    }\n\n    // Cleans up registerNode().\n    function unregisterNode(host, node, func) {\n      var index = indexOfNode(host, node);\n      if (index > -1) {\n        func(node, 0);\n\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(node, null);\n        } else {\n          staticProp(node, 'parentNode', null);\n        }\n\n        arrProto.splice.call(host.childNodes, index, 1);\n      }\n    }\n\n    function addNodeToNode(host, node, insertBefore) {\n      registerNode(host, node, insertBefore, function (eachNode) {\n        host.__insertBefore(eachNode, insertBefore);\n      });\n    }\n\n    function addNodeToHost(host, node, insertBefore) {\n      registerNode(host, node, insertBefore, function (eachNode) {\n        var rootNode = hostToRootMap.get(host);\n        var slotNodes = rootToSlotMap.get(rootNode);\n        var slotNode = slotNodes[getSlotNameFromNode(eachNode)];\n        if (slotNode) {\n          slotNodeIntoSlot(slotNode, eachNode, insertBefore);\n        }\n      });\n    }\n\n    function addNodeToRoot(root, node, insertBefore) {\n      eachNodeOrFragmentNodes(node, function (node) {\n        if (isSlotNode(node)) {\n          addSlotToRoot(root, node);\n        } else {\n          var slotNodes = node.querySelectorAll && node.querySelectorAll('slot');\n          if (slotNodes) {\n            var slotNodesLen = slotNodes.length;\n            for (var a = 0; a < slotNodesLen; a++) {\n              addSlotToRoot(root, slotNodes[a]);\n            }\n          }\n        }\n      });\n      addNodeToNode(root, node, insertBefore);\n    }\n\n    function addSlotToRoot(root, node) {\n      var slotName = getSlotNameFromSlot(node);\n      slotToModeMap.set(node, true);\n      rootToSlotMap.get(root)[slotName] = node;\n      eachChildNode(rootToHostMap.get(root), function (eachNode) {\n        if (!eachNode.assignedSlot && slotName === getSlotNameFromNode(eachNode)) {\n          slotNodeIntoSlot(node, eachNode);\n        }\n      });\n    }\n\n    function removeNodeFromNode(host, node) {\n      unregisterNode(host, node, function () {\n        host.__removeChild(node);\n      });\n    }\n\n    function removeNodeFromHost(host, node) {\n      unregisterNode(host, node, function () {\n        slotNodeFromSlot(node);\n      });\n    }\n\n    function removeNodeFromRoot(root, node) {\n      unregisterNode(root, node, function () {\n        if (isSlotNode(node)) {\n          removeSlotFromRoot(root, node);\n        } else {\n          var nodes = node.querySelectorAll && node.querySelectorAll('slot');\n          for (var a = 0; a < nodes.length; a++) {\n            removeSlotFromRoot(root, nodes[a]);\n          }\n        }\n      });\n    }\n\n    function removeSlotFromRoot(root, node) {\n      node.getAssignedNodes().forEach(slotNodeFromSlot);\n      delete rootToSlotMap.get(root)[getSlotNameFromSlot(node)];\n    }\n\n    function getRootNode(host) {\n      //TODO terribly inefficient\n      if (isRootNode(host)) {\n        return host;\n      } else {\n        if (!host.parentNode) {\n          return;\n        }\n\n        return getRootNode(host.parentNode);\n      }\n    }\n\n    function appendChildOrInsertBefore(host, newNode, refNode) {\n      var nodeType = getNodeType(host);\n      var parentNode = newNode.parentNode;\n      var rootNode = getRootNode(host);\n\n      if (rootNode && getNodeType(newNode) === 'slot') {\n        addSlotToRoot(rootNode, newNode);\n      }\n\n      if (!canPatchNativeAccessors && !host.childNodes.push) {\n        staticProp(host, 'childNodes', []);\n      }\n\n      // If we append a child to a host, the host tells the shadow root to distribute\n      // it. If the root decides it doesn't need to be distributed, it is never\n      // removed from the old parent because in polyfill land we store a reference\n      // to the node but we don't move it. Due to that, we must explicitly remove the\n      // node from its old parent.\n      if (parentNode && getNodeType(parentNode) === 'host') {\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(newNode, null);\n        } else {\n          staticProp(newNode, 'parentNode', null);\n        }\n      }\n\n      if (nodeType === 'node') {\n        if (canPatchNativeAccessors) {\n          return host.__insertBefore(newNode, refNode);\n        } else {\n          return addNodeToNode(host, newNode, refNode);\n        }\n      }\n\n      if (nodeType === 'slot') {\n        return addNodeToNode(host, newNode, refNode);\n      }\n\n      if (nodeType === 'host') {\n        return addNodeToHost(host, newNode, refNode);\n      }\n\n      if (nodeType === 'root') {\n        return addNodeToRoot(host, newNode, refNode);\n      }\n    }\n\n    var members = {\n      // For testing purposes.\n      ____assignedNodes: {\n        get: function get() {\n          return this.______assignedNodes || (this.______assignedNodes = []);\n        }\n      },\n\n      // For testing purposes.\n      ____isInFallbackMode: {\n        get: function get() {\n          return slotToModeMap.get(this);\n        }\n      },\n\n      ____slotChangeListeners: {\n        get: function get() {\n          if (typeof this.______slotChangeListeners === 'undefined') {\n            this.______slotChangeListeners = 0;\n          }\n          return this.______slotChangeListeners;\n        },\n        set: function set(value) {\n          this.______slotChangeListeners = value;\n        }\n      },\n      ____triggerSlotChangeEvent: {\n        value: debounce(function () {\n          if (this.____slotChangeListeners) {\n            this.dispatchEvent(new CustomEvent('slotchange', {\n              bubbles: false,\n              cancelable: false\n            }));\n          }\n        })\n      },\n      addEventListener: {\n        value: function value(name, func, opts) {\n          if (name === 'slotchange' && isSlotNode(this)) {\n            this.____slotChangeListeners++;\n          }\n          return this.__addEventListener(name, func, opts);\n        }\n      },\n      appendChild: {\n        value: function value(newNode) {\n          return appendChildOrInsertBefore(this, newNode);\n        }\n      },\n      assignedSlot: {\n        get: function get() {\n          return nodeToSlotMap.get(this) || null;\n        }\n      },\n      attachShadow: {\n        value: function value(opts) {\n          var mode = opts && opts.mode;\n          if (mode !== 'closed' && mode !== 'open') {\n            throw new Error('You must specify { mode } as \"open\" or \"closed\" to attachShadow().');\n          }\n\n          // Return the existing shadow root if it exists.\n          var existingShadowRoot = hostToRootMap.get(this);\n          if (existingShadowRoot) {\n            return existingShadowRoot;\n          }\n\n          var lightNodes = makeLikeNodeList([].slice.call(this.childNodes));\n          var shadowRoot = document.createElement(opts.polyfillShadowRootTagName || defaultShadowRootTagName);\n\n          // Host and shadow root data.\n          hostToModeMap.set(this, mode);\n          hostToRootMap.set(this, shadowRoot);\n          rootToHostMap.set(shadowRoot, this);\n          rootToSlotMap.set(shadowRoot, {});\n\n          if (canPatchNativeAccessors) {\n            nodeToChildNodesMap.set(this, lightNodes);\n          } else {\n            staticProp(this, 'childNodes', lightNodes);\n          }\n\n          // Existing children should be removed from being displayed, but still\n          // appear to be child nodes. This is how light DOM works; they're still\n          // child nodes but not in the composed DOM yet as there won't be any\n          // slots for them to go into.\n          var chs = this.childNodes;\n          var chsLen = chs.length;\n          for (var a = chsLen - 1; a >= 0; a--) {\n            this.__removeChild(chs[a]);\n          }\n\n          // The shadow root is actually the only child of the host.\n          return this.__appendChild(shadowRoot);\n        }\n      },\n      childElementCount: {\n        get: function get() {\n          return this.children.length;\n        }\n      },\n      childNodes: {\n        get: function get() {\n          if (canPatchNativeAccessors && getNodeType(this) === 'node') {\n            return this.__childNodes;\n          }\n          var childNodes = nodeToChildNodesMap.get(this);\n          childNodes || nodeToChildNodesMap.set(this, childNodes = makeLikeNodeList([]));\n          return childNodes;\n        }\n      },\n      children: {\n        get: function get() {\n          var chs = [];\n          eachChildNode(this, function (node) {\n            if (node.nodeType === 1) {\n              chs.push(node);\n            }\n          });\n          return makeLikeNodeList(chs);\n        }\n      },\n      firstChild: {\n        get: function get() {\n          return this.childNodes[0] || null;\n        }\n      },\n      firstElementChild: {\n        get: function get() {\n          return this.children[0] || null;\n        }\n      },\n      getAssignedNodes: {\n        value: function value() {\n          if (isSlotNode(this)) {\n            var assigned = assignedToSlotMap.get(this);\n            assigned || assignedToSlotMap.set(this, assigned = []);\n            return assigned;\n          }\n        }\n      },\n      hasChildNodes: {\n        value: function value() {\n          return this.childNodes.length > 0;\n        }\n      },\n      innerHTML: {\n        get: function get() {\n          var innerHTML = '';\n\n          var getHtmlNodeOuterHtml = function getHtmlNodeOuterHtml(node) {\n            return node.outerHTML;\n          };\n          var getOuterHtmlByNodeType = {\n            1: getHtmlNodeOuterHtml,\n            3: getEscapedTextContent,\n            8: getCommentNodeOuterHtml\n          };\n\n          eachChildNode(this, function (node) {\n            var getOuterHtml = getOuterHtmlByNodeType[node.nodeType] || getHtmlNodeOuterHtml;\n            innerHTML += getOuterHtml(node);\n          });\n          return innerHTML;\n        },\n        set: function set(innerHTML) {\n          var parsed = parse(innerHTML);\n\n          while (this.hasChildNodes()) {\n            this.removeChild(this.firstChild);\n          }\n\n          while (parsed.hasChildNodes()) {\n            var firstChild = parsed.firstChild;\n\n            // When we polyfill everything on HTMLElement.prototype, we overwrite\n            // properties. This makes it so that parentNode reports null even though\n            // it's actually a parent of the HTML parser. For this reason,\n            // cleanNode() won't work and we must manually remove it from the\n            // parser before it is moved to the host just in case it's added as a\n            // light node but not assigned to a slot.\n            parsed.removeChild(firstChild);\n\n            this.appendChild(firstChild);\n          }\n        }\n      },\n      insertBefore: {\n        value: function value(newNode, refNode) {\n          return appendChildOrInsertBefore(this, newNode, refNode);\n        }\n      },\n      lastChild: {\n        get: function get() {\n          var ch = this.childNodes;\n          return ch[ch.length - 1] || null;\n        }\n      },\n      lastElementChild: {\n        get: function get() {\n          var ch = this.children;\n          return ch[ch.length - 1] || null;\n        }\n      },\n      name: {\n        get: function get() {\n          return this.getAttribute('name');\n        },\n        set: function set(name) {\n          return this.setAttribute('name', name);\n        }\n      },\n      nextSibling: {\n        get: function get() {\n          var host = this;\n          return eachChildNode(this.parentNode, function (child, index, nodes) {\n            if (host === child) {\n              return nodes[index + 1] || null;\n            }\n          });\n        }\n      },\n      nextElementSibling: {\n        get: function get() {\n          var host = this;\n          var found = undefined;\n          return eachChildNode(this.parentNode, function (child) {\n            if (found && child.nodeType === 1) {\n              return child;\n            }\n            if (host === child) {\n              found = true;\n            }\n          });\n        }\n      },\n      outerHTML: {\n        get: function get() {\n          var name = this.tagName.toLowerCase();\n          var attributes = Array.prototype.slice.call(this.attributes).map(function (attr) {\n            return ' ' + attr.name + (attr.value ? '=\"' + attr.value + '\"' : '');\n          }).join('');\n          return '<' + name + attributes + '>' + this.innerHTML + '</' + name + '>';\n        }\n      },\n      parentElement: {\n        get: function get() {\n          return findClosest(this.parentNode, function (node) {\n            return node.nodeType === 1;\n          });\n        }\n      },\n      parentNode: {\n        get: function get() {\n          return nodeToParentNodeMap.get(this) || this.__parentNode || null;\n        }\n      },\n      previousSibling: {\n        get: function get() {\n          var host = this;\n          return eachChildNode(this.parentNode, function (child, index, nodes) {\n            if (host === child) {\n              return nodes[index - 1] || null;\n            }\n          });\n        }\n      },\n      previousElementSibling: {\n        get: function get() {\n          var host = this;\n          var found = undefined;\n          return eachChildNode(this.parentNode, function (child) {\n            if (found && host === child) {\n              return found;\n            }\n            if (child.nodeType === 1) {\n              found = child;\n            }\n          });\n        }\n      },\n      removeChild: {\n        value: function value(refNode) {\n          var nodeType = getNodeType(this);\n\n          if (nodeType === 'node') {\n            if (canPatchNativeAccessors) {\n              return this.__removeChild(refNode);\n            } else {\n              return removeNodeFromNode(this, refNode);\n            }\n          }\n\n          if (nodeType === 'slot') {\n            return removeNodeFromNode(this, refNode);\n          }\n\n          if (nodeType === 'host') {\n            return removeNodeFromHost(this, refNode);\n          }\n\n          if (nodeType === 'root') {\n            return removeNodeFromRoot(this, refNode);\n          }\n        }\n      },\n      removeEventListener: {\n        value: function value(name, func, opts) {\n          if (name === 'slotchange' && this.____slotChangeListeners && isSlotNode(this)) {\n            this.____slotChangeListeners--;\n          }\n          return this.__removeEventListener(name, func, opts);\n        }\n      },\n      replaceChild: {\n        value: function value(newNode, refNode) {\n          this.insertBefore(newNode, refNode);\n          return this.removeChild(refNode);\n        }\n      },\n      shadowRoot: {\n        get: function get() {\n          return hostToModeMap.get(this) === 'open' ? hostToRootMap.get(this) : null;\n        }\n      },\n      textContent: {\n        get: function get() {\n          var textContent = '';\n          eachChildNode(this, function (node) {\n            if (node.nodeType !== Node.COMMENT_NODE) {\n              textContent += node.textContent;\n            }\n          });\n          return textContent;\n        },\n        set: function set(textContent) {\n          while (this.hasChildNodes()) {\n            this.removeChild(this.firstChild);\n          }\n          this.appendChild(document.createTextNode(textContent));\n        }\n      }\n    };\n\n    function findDescriptorFor(name) {\n      for (var a = 0; a < protos.length; a++) {\n        var ctor = window[protos[a]];\n        if (!ctor) {\n          continue;\n        }\n        var proto = ctor.prototype;\n        if (proto.hasOwnProperty(name)) {\n          return Object.getOwnPropertyDescriptor(proto, name);\n        }\n      }\n    }\n\n    if (!('attachShadow' in document.createElement('div'))) {\n      (function () {\n        var elementProto = HTMLElement.prototype;\n        var textProto = Text.prototype;\n        Object.keys(members).forEach(function (memberName) {\n          var memberProperty = members[memberName];\n\n          // All properties should be configurable.\n          memberProperty.configurable = true;\n\n          // Polyfill as much as we can and work around WebKit in other areas.\n          if (canPatchNativeAccessors || polyfillAtRuntime.indexOf(memberName) === -1) {\n            var nativeDescriptor = findDescriptorFor(memberName);\n            Object.defineProperty(elementProto, memberName, memberProperty);\n            var isDefinedInTextProto = memberName in textProto;\n            var shouldOverrideInTextNode = doNotOverridePropertiesInTextNodes.indexOf(memberName) === -1;\n            if (isDefinedInTextProto && shouldOverrideInTextNode) {\n              Object.defineProperty(textProto, memberName, memberProperty);\n            }\n            if (nativeDescriptor && nativeDescriptor.configurable) {\n              Object.defineProperty(elementProto, '__' + memberName, nativeDescriptor);\n              if (isDefinedInTextProto && shouldOverrideInTextNode) {\n                Object.defineProperty(textProto, '__' + memberName, nativeDescriptor);\n              }\n            }\n          }\n        });\n      })();\n    }\n\n\n\n    var api = Object.freeze({\n      default: version\n    });\n\n    var previousGlobal = window.skatejsNamedSlots;\n    version.noConflict = function noConflict() {\n      window.skatejsNamedSlots = previousGlobal;\n      return this;\n    };\n    window.skatejsNamedSlots = version;\n    for (var name in api) {\n      version[name] = api[name];\n    }\n    version.version = '0.1.8';\n\n    return version;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}