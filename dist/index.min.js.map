{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejs","named","slots","this","polyfilled","elem","mapPatch","get","getSlot","node","key","getSlotName","val","slice","getAttribute","mapSlotsDefault","arrayItem","idx","makeLikeNodeList","arr","item","polyfill","name","props","prop","funcs","set","render","fn","slot","opts","default","coerce","Array","isArray","created","data","mapSlots","push","initial","call","childNodes","filter","ch","nodeType","WeakMap","Object","defineProperty","bind","childElementCount","children","length","_this","reduce","prev","curr","concat","firstChild","firstElementChild","innerHTML","map","outerHTML","textContent","join","div","document","createElement","hasChildNodes","appendChild","lastChild","lastElementChild","tagName","toLowerCase","attributes","attr","value","createTextNode","newNode","insertBefore","refNode","index","indexOf","splice","removeChild","replaceChild","version","main","previousGlobal","window","skatejsNamedSlots","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.skatejs-named-slots = factory());\n}(this, function () {\n\n  var mapPatch = new WeakMap();\n\n  var mapSlots = new WeakMap();\n\n  var mapSlotsDefault = new WeakMap();\n\n  // Returns whether or not the specified element has been polyfilled.\n  function polyfilled (elem) {\n    return mapPatch.get(elem);\n  }\n\n  var prop = Object.defineProperty.bind(Object);\n\n  // Helpers.\n\n  function getSlot(elem, node) {\n    var key = getSlotName(elem, node);\n    var val = elem[key];\n    return key && val ? { key: key, val: val.slice() } : null;\n  }\n\n  function getSlotName(elem, node) {\n    return node.getAttribute && node.getAttribute('slot') || mapSlotsDefault.get(elem);\n  }\n\n  function arrayItem(idx) {\n    return this[idx];\n  }\n\n  function makeLikeNodeList(arr) {\n    arr.item = arrayItem;\n    return arr;\n  }\n\n  // Prop overrides.\n\n  var props = {\n    childElementCount: {\n      get: function get() {\n        return this.children.length;\n      }\n    },\n    childNodes: {\n      get: function get() {\n        var _this = this;\n\n        return makeLikeNodeList((mapSlots.get(this) || []).reduce(function (prev, curr) {\n          return prev.concat(_this[curr]);\n        }, []));\n      }\n    },\n    children: {\n      get: function get() {\n        return makeLikeNodeList(this.childNodes.filter(function (node) {\n          return node.nodeType === 1;\n        }));\n      }\n    },\n    firstChild: {\n      get: function get() {\n        return this.childNodes[0];\n      }\n    },\n    firstElementChild: {\n      get: function get() {\n        return this.children[0];\n      }\n    },\n    innerHTML: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.outerHTML || node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        var div = document.createElement('div');\n        div.innerHTML = val;\n        while (div.hasChildNodes()) {\n          this.appendChild(div.childNodes[0]);\n        }\n      }\n    },\n    lastChild: {\n      get: function get() {\n        var ch = this.childNodes;\n        return ch[ch.length - 1];\n      }\n    },\n    lastElementChild: {\n      get: function get() {\n        var ch = this.children;\n        return ch[ch.length - 1];\n      }\n    },\n    outerHTML: {\n      get: function get() {\n        var name = this.tagName.toLowerCase();\n        var attributes = [].slice.call(this.attributes).map(function (attr) {\n          return ' ' + attr.name + (attr.value ? '=\"' + attr.value + '\"' : '');\n        }).join('');\n        return '<' + name + attributes + '>' + this.innerHTML + '</' + name + '>';\n      }\n    },\n    textContent: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        var slot = mapSlotsDefault.get(this);\n        if (slot) {\n          this[slot] = document.createTextNode(val);\n        }\n      }\n    }\n  };\n\n  // Method overrides.\n\n  var funcs = {\n    appendChild: function appendChild(newNode) {\n      var slot = getSlot(this, newNode);\n      if (!slot) {\n        return;\n      }\n      slot.val.push(newNode);\n      this[slot.key] = slot.val;\n      return newNode;\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.childNodes.length > 0;\n    },\n    insertBefore: function insertBefore(newNode, refNode) {\n      var slot = getSlot(this, newNode);\n      if (!slot) {\n        return;\n      }\n      var index = slot.val.indexOf(refNode);\n      if (index === -1) {\n        slot.val.push(newNode);\n      } else {\n        slot.val.splice(index, 0, newNode);\n      }\n      this[slot.key] = slot.val;\n      return newNode;\n    },\n    removeChild: function removeChild(refNode) {\n      var slot = getSlot(this, refNode);\n      if (!slot) {\n        return;\n      }\n      var index = slot.val.indexOf(refNode);\n      if (index !== -1) {\n        slot.val.splice(index, 1);\n        this[slot.key] = slot.val;\n      }\n      return refNode;\n    },\n    replaceChild: function replaceChild(newNode, refNode) {\n      var slot = getSlot(this, newNode);\n      if (!slot) {\n        return;\n      }\n      var index = slot.val.indexOf(refNode);\n      if (index !== -1) {\n        slot.val.splice(index, 1, newNode);\n        this[slot.key] = slot.val;\n      }\n      return refNode;\n    }\n  };\n\n  // Polyfills an element.\n  function polyfill (elem) {\n    if (polyfilled(elem)) {\n      return;\n    }\n\n    for (var name in props) {\n      prop(elem, name, props[name]);\n    }\n\n    for (var name in funcs) {\n      elem[name] = funcs[name];\n    }\n\n    mapPatch.set(elem, true);\n  }\n\n  // Simple renderer that proxies another renderer. It will polyfill if not yet\n  // polyfilled, or simply run the renderer. Initial content is taken into\n  // consideration.\n  function render (fn) {\n    return function (elem) {\n      if (mapPatch.get(elem)) {\n        fn(elem);\n      } else {\n        fn(elem);\n        polyfill(elem);\n      }\n    };\n  }\n\n  // Creates a slot property compatible with the SkateJS custom property\n  // definitions. Makes web component integration much simpler.\n  function slot (opts) {\n    if (!opts) {\n      opts = {\n        default: false,\n        set: null\n      };\n    }\n\n    return {\n      // Makes sure that whatever is passed in is an array.\n      coerce: function coerce(val) {\n        return Array.isArray(val) ? val : [val];\n      },\n\n      // Registers the slot so we can check later.\n      created: function created(elem, data) {\n        var slots = mapSlots.get(elem);\n\n        if (!slots) {\n          mapSlots.set(elem, slots = []);\n        }\n\n        slots.push(data.name);\n\n        if (opts.default) {\n          mapSlotsDefault.set(elem, data.name);\n        }\n      },\n\n      // If an empty value is passed in, ensure that it's an array.\n      'default': function _default() {\n        return [];\n      },\n\n      // Return any initial nodes that match the slot.\n      initial: function initial(elem, data) {\n        return [].slice.call(elem.childNodes).filter(function (ch) {\n          if (ch.getAttribute) {\n            var slot = ch.getAttribute('slot') || opts.default && data.name;\n            return slot === data.name;\n          } else if (ch.nodeType === 3) {\n            return true;\n          }\n        });\n      },\n\n      // User-defined setter.\n      set: opts.set\n    };\n  }\n\n  var version = '0.0.1';\n\n  var main = {\n    polyfill: polyfill,\n    polyfilled: polyfilled,\n    render: render,\n    slot: slot,\n    version: version\n  };\n\n  var previousGlobal = window.skatejsNamedSlots;\n  main.noConflict = function noConflict() {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = main;\n\n  return main;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}