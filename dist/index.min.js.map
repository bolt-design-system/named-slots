{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejs","named","slots","this","applyParentNode","node","parent","prop","configurable","get","removeParentNode","arrayItem","idx","doForNodesIfSlot","elem","func","nodeToArray","forEach","slot","getSlot","name","getAttribute","__slots","querySelector","makeLikeNodeList","arr","item","DocumentFragment","toArray","childNodes","obj","Array","prototype","slice","call","polyfill","mapPolyfilled","props","funcs","set","WeakMap","Object","defineProperty","bind","childElementCount","children","length","nodes","childNodesLen","a","push","filter","nodeType","firstChild","firstElementChild","innerHTML","map","outerHTML","textContent","join","val","div","document","createElement","frag","createDocumentFragment","hasChildNodes","appendChild","lastChild","ch","lastElementChild","tagName","toLowerCase","attributes","attr","value","toString","newNode","insertBefore","refNode","removeChild","replaceChild","previousGlobal","window","skatejsNamedSlots","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.skatejs-named-slots = factory());\n}(this, function () {\n\n  var mapPolyfilled = new WeakMap();\n\n  var prop = Object.defineProperty.bind(Object);\n\n  // Helpers.\n\n  function applyParentNode(node, parent) {\n    prop(node, 'parentNode', {\n      configurable: true,\n      get: function get() {\n        return parent;\n      }\n    });\n  }\n\n  function removeParentNode(node) {\n    prop(node, 'parentNode', {\n      configurable: true,\n      get: function get() {\n        return null;\n      }\n    });\n  }\n\n  function arrayItem(idx) {\n    return this[idx];\n  }\n\n  function doForNodesIfSlot(elem, node, func) {\n    nodeToArray(node).forEach(function (node) {\n      var slot = getSlot(elem, node);\n      if (slot) {\n        func(elem, node, slot);\n      }\n    });\n  }\n\n  function getSlot(elem, node) {\n    if (!node) {\n      return;\n    }\n\n    var name = node.getAttribute && node.getAttribute('slot') || 'content';\n\n    if (!elem.__slots) {\n      elem.__slots = {};\n    }\n\n    var slots = elem.__slots;\n\n    if (typeof slots[name] === 'undefined') {\n      var slot = elem.querySelector('[slot-name=\"' + (name === 'content' ? '' : name) + '\"]');\n      if (slot) {\n        slots[name] = slot;\n      }\n    }\n\n    if (slots[name]) {\n      return slots[name];\n    }\n  }\n\n  function makeLikeNodeList(arr) {\n    arr.item = arrayItem;\n    return arr;\n  }\n\n  function nodeToArray(node) {\n    return node instanceof DocumentFragment ? toArray(node.childNodes) : [node];\n  }\n\n  function toArray(obj) {\n    return Array.prototype.slice.call(obj);\n  }\n\n  // Prop overrides.\n\n  var props = {\n    childElementCount: {\n      get: function get() {\n        return this.children.length;\n      }\n    },\n    childNodes: {\n      get: function get() {\n        var nodes = [];\n        var slots = this.__slots;\n        if (slots) {\n          for (var name in slots) {\n            var slot = slots[name];\n            var childNodes = slot.childNodes;\n            var childNodesLen = childNodes.length;\n            for (var a = 0; a < childNodesLen; a++) {\n              nodes.push(childNodes[a]);\n            }\n          }\n        }\n        return makeLikeNodeList(nodes);\n      }\n    },\n    children: {\n      get: function get() {\n        return makeLikeNodeList(this.childNodes.filter(function (node) {\n          return node.nodeType === 1;\n        }));\n      }\n    },\n    firstChild: {\n      get: function get() {\n        return this.childNodes[0] || null;\n      }\n    },\n    firstElementChild: {\n      get: function get() {\n        return this.children[0] || null;\n      }\n    },\n    innerHTML: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.outerHTML || node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        var div = document.createElement('div');\n        var frag = document.createDocumentFragment();\n        div.innerHTML = val;\n        while (div.hasChildNodes()) {\n          frag.appendChild(div.firstChild);\n        }\n        this.appendChild(frag);\n      }\n    },\n    lastChild: {\n      get: function get() {\n        var ch = this.childNodes;\n        return ch[ch.length - 1] || null;\n      }\n    },\n    lastElementChild: {\n      get: function get() {\n        var ch = this.children;\n        return ch[ch.length - 1] || null;\n      }\n    },\n    outerHTML: {\n      get: function get() {\n        var name = this.tagName.toLowerCase();\n        var attributes = toArray(this.attributes).map(function (attr) {\n          return ' ' + attr.name + (attr.value ? '=\"' + attr.value + '\"' : '');\n        }).join('');\n        return '<' + name + attributes + '>' + this.innerHTML + '</' + name + '>';\n      }\n    },\n    textContent: {\n      get: function get() {\n        return this.childNodes.map(function (node) {\n          return node.textContent;\n        }).join('');\n      },\n      set: function set(val) {\n        doForNodesIfSlot(this, val.toString(), function (elem, node, slot) {\n          slot.textContent = node;\n        });\n      }\n    }\n  };\n\n  // Method overrides.\n\n  var funcs = {\n    appendChild: function appendChild(newNode) {\n      doForNodesIfSlot(this, newNode, function (elem, node, slot) {\n        slot.appendChild(node);\n        applyParentNode(node, elem);\n      });\n      return newNode;\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.childNodes.length > 0;\n    },\n    insertBefore: function insertBefore(newNode, refNode) {\n      doForNodesIfSlot(this, newNode, function (elem, node, slot) {\n        slot.insertBefore(node, refNode);\n        applyParentNode(node, elem);\n      });\n      return newNode;\n    },\n    removeChild: function removeChild(refNode) {\n      doForNodesIfSlot(this, refNode, function (elem, node, slot) {\n        slot.removeChild(node);\n        removeParentNode(node);\n      });\n      return refNode;\n    },\n    replaceChild: function replaceChild(newNode, refNode) {\n      doForNodesIfSlot(this, newNode, function (elem, node, slot) {\n        slot.replaceChild(node, refNode);\n        applyParentNode(node, elem);\n      });\n      removeParentNode(refNode);\n      return refNode;\n    }\n  };\n\n  // Polyfills an element.\n  function polyfill (elem) {\n    if (mapPolyfilled.get(elem)) {\n      return;\n    }\n\n    // Polyfill properties.\n    for (var name in props) {\n      prop(elem, name, props[name]);\n    }\n\n    // Polyfill methods.\n    for (var name in funcs) {\n      elem[name] = funcs[name];\n    }\n\n    mapPolyfilled.set(elem, true);\n    return elem;\n  }\n\n  var previousGlobal = window.skatejsNamedSlots;\n  polyfill.noConflict = function noConflict() {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = polyfill;\n\n  return polyfill;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}