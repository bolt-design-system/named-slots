{"version":3,"file":"index.js","sources":["../src/util/each.js","../src/util/can-patch-native-accessors.js","../node_modules/debounce/node_modules/date-now/index.js","../node_modules/debounce/index.js","../src/version.js","../src/util/weak-map.js","../src/index.js","../src/global.js"],"sourcesContent":["export function eachChildNode (node, func) {\n  if (!node) {\n    return;\n  }\n\n  const chs = node.childNodes;\n  const chsLen = chs.length;\n  for (let a = 0; a < chsLen; a++) {\n    const ret = func(chs[a], a, chs);\n    if (typeof ret !== 'undefined') {\n      return ret;\n    }\n  }\n}\n\nexport function eachNodeOrFragmentNodes (node, func) {\n  if (node instanceof DocumentFragment) {\n    const chs = node.childNodes;\n    const chsLen = chs.length;\n    for (let a = 0; a < chsLen; a++) {\n      func(chs[a], a);\n    }\n  } else {\n    func(node, 0);\n  }\n}\n","// Any code referring to this is because it has to work around this bug in\n// WebKit: https://bugs.webkit.org/show_bug.cgi?id=49739\nexport default !!Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode').get;\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","export default '0.0.1';\n","export default window.WeakMap || (function () {\n  let index = 0;\n  function Wm () {\n    this.key = `____weak_map_${index++}`;\n  }\n  Wm.prototype = {\n    delete (obj) {\n      if (obj) {\n        delete obj[this.key];\n      }\n    },\n    get (obj) {\n      return obj ? obj[this.key] : null;\n    },\n    has (obj) {\n      return obj ? typeof obj[this.key] !== 'undefined' : false;\n    },\n    set (obj, val) {\n      if (obj) {\n        const key = this.key;\n        if (typeof obj[key] === 'undefined') {\n          Object.defineProperty(obj, key, {\n            configurable: true,\n            enumerable: false,\n            value: val\n          });\n        } else {\n          obj[key] = val;\n        }\n      }\n    }\n  };\n  return Wm;\n}());\n","import { eachChildNode, eachNodeOrFragmentNodes } from './util/each';\nimport canPatchNativeAccessors from './util/can-patch-native-accessors';\nimport debounce from 'debounce';\nimport version from './version';\nimport WeakMap from './util/weak-map';\n\n// We use a real DOM node for a shadow root. This is because the host node\n// basically becomes a virtual entry point for your element leaving the shadow\n// root the only thing that can receive instructions on how the host should\n// render to the browser.\nconst defaultShadowRootTagName = '_shadow_root_';\nconst defaultShadowRootTagNameUc = defaultShadowRootTagName.toUpperCase();\n\n// * WebKit only *\n//\n// These members we need cannot override as we require native access to their\n// original values at some point.\nconst polyfilAtRuntime = ['childNodes', 'parentNode'];\n\n// These are the protos that we need to search for native descriptors on.\nconst protos = ['Node', 'Element', 'EventTarget'];\n\n// Private data stores.\nconst assignedToSlotMap = new WeakMap();\nconst hostToModeMap = new WeakMap();\nconst hostToRootMap = new WeakMap();\nconst nodeToChildNodesMap = new WeakMap();\nconst nodeToParentNodeMap = new WeakMap();\nconst nodeToSlotMap = new WeakMap();\nconst rootToHostMap = new WeakMap();\nconst rootToSlotMap = new WeakMap();\nconst slotToModeMap = new WeakMap();\n\n\n// * WebKit only *\n//\n// We require some way to parse HTML natively because we can't use the native\n// accessors. To do this we parse as XML and conver each node in the tree to\n// HTML nodes.\n//\n// This works because we polyfill at the HTMLElement level and XML nodes are\n// considered Element nodes and we don't polyfill at that level.\n\nconst parser = new DOMParser();\n\nfunction convertXmlToHtml (node) {\n  const { nodeType } = node;\n  if (nodeType === 1) {\n    const copy = document.createElement(node.tagName);\n    for (let a = 0; a < node.attributes.length; a++) {\n      const attr = node.attributes[a];\n      copy.setAttribute(attr.name, attr.value);\n    }\n    for (let a = 0; a < node.childNodes.length; a++) {\n      const childNode = node.childNodes[a];\n      copy.appendChild(convertXmlToHtml(childNode));\n    }\n    return copy;\n  }\n  return node;\n}\n\nfunction parse (html) {\n  const tree = document.createElement('div');\n  const parsed = parser.parseFromString(html, 'text/xml');\n  while (parsed.hasChildNodes()) {\n    const firstChild = parsed.firstChild;\n    parsed.removeChild(firstChild);\n    tree.appendChild(convertXmlToHtml(firstChild));\n  }\n  return tree;\n}\n\n\nfunction staticProp (obj, name, value) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    get () { return value; }\n  });\n}\n\n\n// Slotting helpers.\n\nfunction arrayItem (idx) {\n  return this[idx];\n}\n\nfunction makeLikeNodeList (arr) {\n  arr.item = arrayItem;\n  return arr;\n}\n\nfunction getNodeType (node) {\n  if (isHostNode(node)) {\n    return 'host';\n  }\n\n  if (isSlotNode(node)) {\n    return 'slot';\n  }\n\n  if (isRootNode(node)) {\n    return 'root';\n  }\n\n  return 'node';\n}\n\nfunction isHostNode (node) {\n  return !!hostToRootMap.get(node);\n}\n\nfunction isSlotNode (node) {\n  return node.tagName === 'SLOT';\n}\n\nfunction isRootNode (node) {\n  return node.tagName === defaultShadowRootTagNameUc;\n}\n\nfunction findClosest (node, func) {\n  while (node) {\n    if (node === document) {\n      break;\n    }\n    if (func(node)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n}\n\nfunction getSlotNameFromSlot (node) {\n  return node.getAttribute && node.getAttribute('name') || 'default';\n}\n\nfunction getSlotNameFromNode (node) {\n  return node.getAttribute && node.getAttribute('slot') || 'default';\n}\n\nfunction slotNodeIntoSlot (slot, node, insertBefore) {\n  const assignedNodes = slot.getAssignedNodes();\n  const slotInsertBeforeIndex = assignedNodes.indexOf(insertBefore);\n\n  // Don't slot empty text nodes. This messes up fallback content.\n  if (node.nodeType === 3 && node.textContent.trim().length === 0) {\n    return;\n  }\n\n  nodeToSlotMap.set(node, slot);\n\n  // If there's currently no assigned nodes, there will be, so remove all fallback content.\n  if (!assignedNodes.length) {\n    slotToModeMap.set(slot, false);\n    [].slice.call(slot.childNodes).forEach(fallbackNode => slot.__removeChild(fallbackNode));\n  }\n\n  const shouldAffectSlot = !slotToModeMap.get(slot);\n\n  if (slotInsertBeforeIndex > -1) {\n    if (shouldAffectSlot) {\n      slot.__insertBefore(node, insertBefore);\n    }\n\n    assignedNodes.splice(slotInsertBeforeIndex, 0, node);\n  } else {\n    if (shouldAffectSlot) {\n      slot.__appendChild(node);\n    }\n\n    assignedNodes.push(node);\n  }\n\n  slot.____triggerSlotChangeEvent();\n}\n\nfunction slotNodeFromSlot (node) {\n  const slot = node.assignedSlot;\n\n  if (slot) {\n    const assignedNodes = slot.getAssignedNodes();\n    const index = assignedNodes.indexOf(node);\n\n    if (index > -1) {\n      assignedNodes.splice(index, 1);\n      nodeToSlotMap.set(node, null);\n\n      const shouldAffectSlot = !slotToModeMap.get(slot);\n\n      // We only update the actual DOM representation if we're displaying\n      // slotted nodes.\n      if (shouldAffectSlot) {\n        slot.__removeChild(node);\n      }\n\n      // If this was the last slotted node, then insert fallback content.\n      if (!assignedNodes.length) {\n        slotToModeMap.set(slot, true);\n        eachChildNode(slot, function (node) {\n          slot.__appendChild(node);\n        });\n      }\n\n      slot.____triggerSlotChangeEvent();\n    }\n  }\n}\n\nfunction indexOfNode (host, node) {\n  const chs = host.childNodes;\n  const chsLen = chs.length;\n  for (let a = 0; a < chsLen; a++) {\n    if (chs[a] === node) {\n      return a;\n    }\n  }\n  return -1;\n}\n\n// Adds the node to the list of childNodes on the host and fakes any necessary\n// information such as parentNode.\nfunction registerNode (host, node, insertBefore, func) {\n  const index = indexOfNode(host, insertBefore);\n  eachNodeOrFragmentNodes(node, function (eachNode, eachIndex) {\n    func(eachNode, eachIndex);\n\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(eachNode, host);\n    } else {\n      staticProp(eachNode, 'parentNode', host);\n    }\n\n    if (index > -1) {\n      host.childNodes.splice(index + eachIndex, 0, eachNode);\n    } else {\n      host.childNodes.push(eachNode);\n    }\n  });\n}\n\n// Cleans up registerNode().\nfunction unregisterNode (host, node, func) {\n  const index = indexOfNode(host, node);\n  if (index > -1) {\n    func(node, 0);\n\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(node, null);\n    } else {\n      staticProp(node, 'parentNode', null);\n    }\n\n    host.childNodes.splice(index, 1);\n  }\n}\n\nfunction addNodeToNode (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    host.__insertBefore(eachNode, insertBefore);\n  });\n}\n\nfunction addNodeToHost (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    const rootNode = hostToRootMap.get(host);\n    const slotNodes = rootToSlotMap.get(rootNode);\n    const slotNode = slotNodes[getSlotNameFromNode(eachNode)];\n    if (slotNode) {\n      slotNodeIntoSlot(slotNode, eachNode, insertBefore);\n    }\n  });\n}\n\nfunction addNodeToRoot (root, node, insertBefore) {\n  eachNodeOrFragmentNodes(node, function (node) {\n    if (isSlotNode(node)) {\n      addSlotToRoot(root, node);\n    } else {\n      const slotNodes = node.querySelectorAll && node.querySelectorAll('slot');\n      if (slotNodes) {\n        const slotNodesLen = slotNodes.length;\n        for (let a = 0; a < slotNodesLen; a++) {\n          addSlotToRoot(root, slotNodes[a]);\n        }\n      }\n    }\n  });\n  addNodeToNode(root, node, insertBefore);\n}\n\nfunction addSlotToRoot (root, node) {\n  const slotName = getSlotNameFromSlot(node);\n  slotToModeMap.set(node, true);\n  rootToSlotMap.get(root)[slotName] = node;\n  eachChildNode(rootToHostMap.get(root), function (eachNode) {\n    if (!eachNode.assignedSlot && slotName === getSlotNameFromNode(eachNode)) {\n      slotNodeIntoSlot(node, eachNode);\n    }\n  });\n}\n\nfunction removeNodeFromNode (host, node) {\n  unregisterNode(host, node, function () {\n    host.__removeChild(node);\n  });\n}\n\nfunction removeNodeFromHost (host, node) {\n  unregisterNode(host, node, function () {\n    slotNodeFromSlot(node);\n  });\n}\n\nfunction removeNodeFromRoot (root, node) {\n  unregisterNode(root, node, function () {\n    if (isSlotNode(node)) {\n      removeSlotFromRoot(root, node);\n    } else {\n      const nodes = node.querySelectorAll && node.querySelectorAll('slot');\n      for (let a = 0; a < nodes.length; a++) {\n        removeSlotFromRoot(root, nodes[a]);\n      }\n    }\n  });\n}\n\nfunction removeSlotFromRoot (root, node) {\n  node.getAssignedNodes().forEach(slotNodeFromSlot);\n  delete rootToSlotMap.get(root)[getSlotNameFromSlot(node)];\n}\n\nfunction appendChildOrInsertBefore (host, newNode, refNode) {\n  const nodeType = getNodeType(host);\n  const parentNode = newNode.parentNode;\n\n  if (!canPatchNativeAccessors && !host.childNodes.push) {\n    staticProp(host, 'childNodes', []);\n  }\n\n  // If we append a child to a host, the host tells the shadow root to distribute\n  // it. If the root decides it doesn't need to be distributed, it is never\n  // removed from the old parent because in polyfill land we store a reference\n  // to the node but we don't move it. Due to that, we must explicitly remove the\n  // node from its old parent.\n  if (parentNode && getNodeType(parentNode) === 'host') {\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(newNode, null);\n    } else {\n      staticProp(newNode, 'parentNode', null);\n    }\n  }\n\n  if (nodeType === 'node') {\n    if (canPatchNativeAccessors) {\n      return host.__insertBefore(newNode, refNode);\n    } else {\n      return addNodeToNode(host, newNode, refNode);\n    }\n  }\n\n  if (nodeType === 'slot') {\n    return addNodeToNode(host, newNode, refNode);\n  }\n\n  if (nodeType === 'host') {\n    return addNodeToHost(host, newNode, refNode);\n  }\n\n  if (nodeType === 'root') {\n    return addNodeToRoot(host, newNode, refNode);\n  }\n}\n\nconst members = {\n  // For testing purposes.\n  ____assignedNodes: {\n    get () {\n      return this.______assignedNodes || (this.______assignedNodes = []);\n    }\n  },\n\n  // For testing purposes.\n  ____isInFallbackMode: {\n    get () {\n      return slotToModeMap.get(this);\n    }\n  },\n\n  ____slotChangeListeners: {\n    get () {\n      if (typeof this.______slotChangeListeners === 'undefined') {\n        this.______slotChangeListeners = 0;\n      }\n      return this.______slotChangeListeners;\n    },\n    set (value) {\n      this.______slotChangeListeners = value;\n    }\n  },\n  ____triggerSlotChangeEvent: {\n    value: debounce(function () {\n      if (this.____slotChangeListeners) {\n        this.dispatchEvent(new CustomEvent('slotchange', {\n          bubbles: false,\n          cancelable: false\n        }));\n      }\n    })\n  },\n  addEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange' && isSlotNode(this)) {\n        this.____slotChangeListeners++;\n      }\n      return this.__addEventListener(name, func, opts);\n    }\n  },\n  appendChild: {\n    value (newNode) {\n      return appendChildOrInsertBefore(this, newNode);\n    }\n  },\n  assignedSlot: {\n    get () {\n      return nodeToSlotMap.get(this) || null;\n    }\n  },\n  attachShadow: {\n    value (opts) {\n      const mode = opts && opts.mode;\n      if (mode !== 'closed' && mode !== 'open') {\n        throw new Error('You must specify { mode } as \"open\" or \"closed\" to attachShadow().');\n      }\n\n      // Return the existing shadow root if it exists.\n      const existingShadowRoot = hostToRootMap.get(this);\n      if (existingShadowRoot) {\n        return existingShadowRoot;\n      }\n\n      const lightNodes = makeLikeNodeList([].slice.call(this.childNodes));\n      const shadowRoot = document.createElement(opts.polyfillShadowRootTagName || defaultShadowRootTagName);\n\n      // Host and shadow root data.\n      hostToModeMap.set(this, mode);\n      hostToRootMap.set(this, shadowRoot);\n      rootToHostMap.set(shadowRoot, this);\n      rootToSlotMap.set(shadowRoot, {});\n\n      if (canPatchNativeAccessors) {\n        nodeToChildNodesMap.set(this, lightNodes);\n      } else {\n        staticProp(this, 'childNodes', lightNodes);\n      }\n\n      // Existing children should be removed from being displayed, but still\n      // appear to be child nodes. This is how light DOM works; they're still\n      // child nodes but not in the composed DOM yet as there won't be any\n      // slots for them to go into.\n      eachChildNode(this, node => this.__removeChild(node));\n\n      // The shadow root is actually the only child of the host.\n      return this.__appendChild(shadowRoot);\n    }\n  },\n  childElementCount: {\n    get () {\n      return this.children.length;\n    }\n  },\n  childNodes: {\n    get () {\n      if (canPatchNativeAccessors && getNodeType(this) === 'node') {\n        return this.__childNodes;\n      }\n      let childNodes = nodeToChildNodesMap.get(this);\n      childNodes || nodeToChildNodesMap.set(this, childNodes = makeLikeNodeList([]));\n      return childNodes;\n    }\n  },\n  children: {\n    get () {\n      const chs = [];\n      eachChildNode(this, function (node) {\n        if (node.nodeType === 1) {\n          chs.push(node);\n        }\n      });\n      return makeLikeNodeList(chs);\n    }\n  },\n  firstChild: {\n    get () {\n      return this.childNodes[0] || null;\n    }\n  },\n  firstElementChild: {\n    get () {\n      return this.children[0] || null;\n    }\n  },\n  getAssignedNodes: {\n    value () {\n      if (isSlotNode(this)) {\n        let assigned = assignedToSlotMap.get(this);\n        assigned || assignedToSlotMap.set(this, assigned = []);\n        return assigned;\n      }\n    }\n  },\n  hasChildNodes: {\n    value () {\n      return this.childNodes.length > 0;\n    }\n  },\n  innerHTML: {\n    get () {\n      let innerHTML = '';\n      eachChildNode(this, function (node) {\n        innerHTML += node.nodeType === 1 ? node.outerHTML : node.textContent;\n      });\n      return innerHTML;\n    },\n    set (innerHTML) {\n      const parsed = parse(innerHTML);\n\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n\n      while (parsed.hasChildNodes()) {\n        const firstChild = parsed.firstChild;\n\n        // When we polyfill everything on HTMLElement.prototype, we overwrite\n        // properties. This makes it so that parentNode reports null even though\n        // it's actually a parent of the HTML parser. For this reason,\n        // cleanNode() won't work and we must manually remove it from the\n        // parser before it is moved to the host just in case it's added as a\n        // light node but not assigned to a slot.\n        parsed.removeChild(firstChild);\n\n        this.appendChild(firstChild);\n      }\n    }\n  },\n  insertBefore: {\n    value (newNode, refNode) {\n      return appendChildOrInsertBefore(this, newNode, refNode);\n    }\n  },\n  lastChild: {\n    get () {\n      const ch = this.childNodes;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  lastElementChild: {\n    get () {\n      const ch = this.children;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  name: {\n    get () {\n      return this.getAttribute('name');\n    },\n    set (name) {\n      return this.setAttribute('name', name);\n    }\n  },\n  nextSibling: {\n    get () {\n      const host = this;\n      return eachChildNode(this.parentNode, function (child, index, nodes) {\n        if (host === child) {\n          return nodes[index + 1] || null;\n        }\n      });\n    }\n  },\n  nextElementSibling: {\n    get () {\n      const host = this;\n      let found;\n      return eachChildNode(this.parentNode, function (child) {\n        if (found && child.nodeType === 1) {\n          return child;\n        }\n        if (host === child) {\n          found = true;\n        }\n      });\n    }\n  },\n  outerHTML: {\n    get () {\n      const name = this.tagName.toLowerCase();\n      const attributes = Array.prototype.slice.call(this.attributes).map(function (attr) {\n        return ` ${attr.name}${attr.value ? `=\"${attr.value}\"` : ''}`;\n      }).join('');\n      return `<${name}${attributes}>${this.innerHTML}</${name}>`;\n    }\n  },\n  parentElement: {\n    get () {\n      return findClosest(this.parentNode, function (node) {\n        return node.nodeType === 1;\n      });\n    }\n  },\n  parentNode: {\n    get () {\n      return nodeToParentNodeMap.get(this) || this.__parentNode || null;\n    }\n  },\n  previousSibling: {\n    get () {\n      const host = this;\n      return eachChildNode(this.parentNode, function (child, index, nodes) {\n        if (host === child) {\n          return nodes[index - 1] || null;\n        }\n      });\n    }\n  },\n  previousElementSibling: {\n    get () {\n      const host = this;\n      let found;\n      return eachChildNode(this.parentNode, function (child) {\n        if (found && host === child) {\n          return found;\n        }\n        if (child.nodeType === 1) {\n          found = child;\n        }\n      });\n    }\n  },\n  removeChild: {\n    value (refNode) {\n      const nodeType = getNodeType(this);\n\n      if (nodeType === 'node') {\n        if (canPatchNativeAccessors) {\n          return this.__removeChild(refNode);\n        } else {\n          return removeNodeFromNode(this, refNode);\n        }\n      }\n\n      if (nodeType === 'slot') {\n        return removeNodeFromNode(this, refNode);\n      }\n\n      if (nodeType === 'host') {\n        return removeNodeFromHost(this, refNode);\n      }\n\n      if (nodeType === 'root') {\n        return removeNodeFromRoot(this, refNode);\n      }\n    }\n  },\n  removeEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange' && this.____slotChangeListeners && isSlotNode(this)) {\n        this.____slotChangeListeners--;\n      }\n      return this.__removeEventListener(name, func, opts);\n    }\n  },\n  replaceChild: {\n    value (newNode, refNode) {\n      this.insertBefore(newNode, refNode);\n      return this.removeChild(refNode);\n    }\n  },\n  shadowRoot: {\n    get () {\n      return hostToModeMap.get(this) === 'open' ? hostToRootMap.get(this) : null;\n    }\n  },\n  textContent: {\n    get () {\n      let textContent = '';\n      eachChildNode(this, function (node) {\n        textContent += node.textContent;\n      });\n      return textContent;\n    },\n    set (textContent) {\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n      this.appendChild(document.createTextNode(textContent));\n    }\n  }\n};\n\nfunction findDescriptorFor (name) {\n  for (let a = 0; a < protos.length; a++) {\n    const ctor = window[protos[a]];\n    if (!ctor) {\n      continue;\n    }\n    const proto = ctor.prototype;\n    if (proto.hasOwnProperty(name)) {\n      return Object.getOwnPropertyDescriptor(proto, name);\n    }\n  }\n}\n\nif (!('attachShadow' in document.createElement('div'))) {\n  const elementProto = HTMLElement.prototype;\n  Object.keys(members).forEach(function (memberName) {\n    const memberProperty = members[memberName];\n\n    // All properties should be configurable.\n    memberProperty.configurable = true;\n\n    // Polyfill as much as we can and work around WebKit in other areas.\n    if (canPatchNativeAccessors || polyfilAtRuntime.indexOf(memberName) === -1) {\n      const nativeDescriptor = findDescriptorFor(memberName);\n      Object.defineProperty(elementProto, memberName, memberProperty);\n      if (nativeDescriptor && nativeDescriptor.configurable) {\n        Object.defineProperty(elementProto, '__' + memberName, nativeDescriptor);\n      }\n    }\n  });\n}\n\nexport default version;\n","\n  import main, * as api from '../src/index.js';\n  const previousGlobal = window.skatejsNamedSlots;\n  main.noConflict = function noConflict () {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = main;\n  for (let name in api) {\n    main[name] = api[name];\n  }\n  main.version = '0.1.4';\n  export default main;\n"],"names":["main"],"mappings":"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"}