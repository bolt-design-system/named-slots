{"version":3,"file":"index.js","sources":["../node_modules/debounce/node_modules/date-now/index.js","../node_modules/debounce/index.js","../src/util/each.js","../src/version.js","../src/index.js","../src/global.js"],"sourcesContent":["module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","// Does something for a single node or a DocumentFragment. This is useful when\n// working with arguments that are passed to DOM methods that work with either.\nexport default function (node, func) {\n  if (node instanceof DocumentFragment) {\n    const chs = node.childNodes;\n    const chsLen = chs.length;\n    for (let a = 0; a < chsLen; a++) {\n      func(chs[a], a);\n    }\n  } else {\n    func(node, 0);\n  }\n}\n","export default '0.0.1';\n","import debounce from 'debounce';\nimport each from './util/each';\nimport version from './version';\n\n\nconst defaultShadowRootTagName = '_shadow_root_';\n\n\n// Parse HTML natively.\n\nconst parser = new DOMParser;\n\nfunction convertXmlToHtml (node) {\n  const { nodeType } = node;\n  if (nodeType === 1) {\n    const copy = document.createElement(node.tagName);\n    for (let a = 0; a < node.attributes.length; a++) {\n      const attr = node.attributes[a];\n      copy.setAttribute(attr.name, attr.value);\n    }\n    for (let a = 0; a < node.childNodes.length; a++) {\n      const childNode = node.childNodes[a];\n      copy.appendChild(convertXmlToHtml(childNode));\n    }\n    return copy;\n  }\n  return node;\n}\n\nfunction parse (html) {\n  const tree = document.createElement('div');\n  const parsed = parser.parseFromString(html, 'text/xml');\n  while (parsed.hasChildNodes()) {\n    const firstChild = parsed.firstChild;\n    parsed.removeChild(firstChild);\n    tree.appendChild(convertXmlToHtml(firstChild));\n  }\n  return tree;\n}\n\n\n// Slotting helpers.\n\nfunction arrayItem (idx) {\n  return this[idx];\n}\n\nfunction makeLikeNodeList (arr) {\n  arr.item = arrayItem;\n  return arr;\n}\n\n// If we append a child to a host, the host tells the shadow root to distribute\n// it. If the root decides it doesn't need to be distributed, it is never\n// removed from the old parent because in polyfill land we store a reference\n// to the node but we don't move it. Due to that, we must explicitly remove the\n// node from its old parent.\nfunction cleanNode (node) {\n  const parent = node.parentNode;\n  if (parent) {\n    parent.removeChild(node);\n  }\n}\n\nfunction isHostNode (node) {\n  return !!node.____rootNode;\n}\n\nfunction isShadowNode (node) {\n  return !!node.____hostNode;\n}\n\nfunction isSlotNode (node) {\n  return node.tagName === 'SLOT';\n}\n\nfunction findClosest (node, func) {\n  while (node) {\n    if (node === document) {\n      break;\n    }\n    if (func(node)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n}\n\nfunction findClosestShadowRoot (node) {\n  return findClosest(node, isShadowNode);\n}\n\nfunction staticProp (node, prop, value) {\n  Object.defineProperty(node, prop, {\n    configurable: true,\n    get () {\n      return value;\n    }\n  });\n}\n\nfunction getSlotNameFromSlot (node) {\n  return node.getAttribute && node.getAttribute('name') || 'default';\n}\n\nfunction getSlotNameFromNode (node) {\n  return node.getAttribute && node.getAttribute('slot') || 'default';\n}\n\nfunction slotNodeIntoSlot (slot, node, insertBefore) {\n  const slotInsertBeforeIndex = slot.____assignedNodes.indexOf(insertBefore);\n  const assignedNodes = slot.____assignedNodes;\n  const fallbackNodes = slot.childNodes;\n\n  staticProp(node, 'assignedSlot', slot);\n\n  // If there's currently no assigned nodes, there will be, so remove all fallback content.\n  if (!assignedNodes.length) {\n    slot.____isInFallbackMode = false;\n    fallbackNodes.forEach(fallbackNode => slot.__removeChild(fallbackNode));\n  }\n\n  if (slotInsertBeforeIndex > -1) {\n    if (!slot.____isInFallbackMode) {\n      slot.__insertBefore(node, insertBefore);\n    }\n\n    assignedNodes.splice(slotInsertBeforeIndex, 0, node);\n  } else {\n    if (!slot.____isInFallbackMode) {\n      slot.__appendChild(node);\n    }\n\n    assignedNodes.push(node);\n  }\n\n  slot.____triggerSlotChangeEvent();\n}\n\nfunction slotNodeFromSlot (node) {\n  const slot = node.assignedSlot;\n\n  if (slot) {\n    const index = slot.____assignedNodes.indexOf(node);\n\n    if (index > -1) {\n      const assignedNodes = slot.____assignedNodes;\n\n      assignedNodes.splice(index, 1);\n      staticProp(node, 'assignedSlot', null);\n\n      // We only update the actual DOM representation if we're displaying\n      // slotted nodes.\n      if (!slot.____isInFallbackMode) {\n        slot.__removeChild(node);\n      }\n\n      // If this was the last slotted node, then insert fallback content.\n      if (!assignedNodes.length) {\n        slot.____isInFallbackMode = true;\n        slot.childNodes.forEach(fallbackNode => slot.__appendChild(fallbackNode));\n      }\n\n      slot.____triggerSlotChangeEvent();\n    }\n  }\n}\n\n// Adds the node to the list of childNodes on the host and fakes any necessary\n// information such as parentNode.\nfunction registerNode (host, node, insertBefore, func) {\n  const index = host.childNodes.indexOf(insertBefore);\n  each(node, function (eachNode, eachIndex) {\n    func(eachNode, eachIndex);\n    staticProp(eachNode, 'parentNode', host);\n    if (index > -1) {\n      host.childNodes.splice(index + eachIndex, 0, eachNode);\n    } else {\n      host.childNodes.push(eachNode);\n    }\n  });\n}\n\n// Cleans up registerNode().\nfunction unregisterNode (host, node, func) {\n  const index = host.childNodes.indexOf(node);\n  if (index > -1) {\n    func(node, 0);\n    staticProp(node, 'parentNode', null);\n    host.childNodes.splice(index, 1);\n  }\n}\n\nfunction addNodeToNode (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    host.__insertBefore(eachNode, insertBefore);\n  });\n}\n\nfunction addNodeToHost (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    const slotNode = host.____rootNode.____slotNodes[getSlotNameFromNode(eachNode)];\n    if (slotNode) {\n      slotNodeIntoSlot(slotNode, eachNode, insertBefore);\n    }\n  });\n}\n\nfunction addNodeToRoot (root, node, insertBefore) {\n  each(node, function (node) {\n    if (isSlotNode(node)) {\n      addSlotToRoot(root, node);\n    } else {\n      const slotNodes = node.querySelectorAll && node.querySelectorAll('slot');\n      const slotNodesLen = slotNodes.length;\n      for (let a = 0; a < slotNodesLen; a++) {\n        addSlotToRoot(root, slotNodes[a]);\n      }\n    }\n  });\n  addNodeToNode(root, node, insertBefore);\n}\n\nfunction addSlotToRoot (root, node) {\n  const slotName = getSlotNameFromSlot(node);\n  node.____isInFallbackMode = true;\n  root.____slotNodes[slotName] = node;\n  root.____hostNode.childNodes.forEach(function (eachNode) {\n    if (!eachNode.assignedSlot && slotName === getSlotNameFromNode(eachNode)) {\n      slotNodeIntoSlot(node, eachNode);\n    }\n  });\n}\n\nfunction removeNodeFromNode (host, node) {\n  unregisterNode(host, node, function () {\n    host.__removeChild(node);\n  });\n}\n\nfunction removeNodeFromHost (host, node) {\n  unregisterNode(host, node, function () {\n    slotNodeFromSlot(node);\n  });\n}\n\nfunction removeNodeFromRoot (root, node) {\n  unregisterNode(root, node, function () {\n    if (isSlotNode(node)) {\n      removeSlotFromRoot(root, node);\n    } else {\n      const nodes = node.querySelectorAll && node.querySelectorAll('slot');\n      for (let a = 0; a < nodes.length; a++) {\n        removeSlotFromRoot(root, nodes[a]);\n      }\n    }\n  });\n}\n\nfunction removeSlotFromRoot (root, node) {\n  node.____assignedNodes.forEach(slotNodeFromSlot);\n  delete root.____slotNodes[getSlotNameFromSlot(node)];\n}\n\nfunction appendChildOrInsertBefore (host, newNode, refNode) {\n  let closestRoot;\n\n  cleanNode(newNode);\n\n  if (isHostNode(host)) {\n    addNodeToHost(host, newNode, refNode);\n  } else if (isSlotNode(host)) {\n    addNodeToNode(host, newNode, refNode);\n  } else if ((closestRoot = findClosestShadowRoot(host))) {\n    addNodeToRoot(closestRoot, newNode, refNode);\n  } else {\n    addNodeToNode(host, newNode, refNode);\n  }\n}\n\nconst members = {\n  ____assignedNodes: {\n    get () {\n      return this.______assignedNodes || (this.______assignedNodes = []);\n    }\n  },\n  ____slotChangeListeners: {\n    get () {\n      if (typeof this.______slotChangeListeners === 'undefined') {\n        this.______slotChangeListeners = 0;\n      }\n      return this.______slotChangeListeners;\n    },\n    set (value) {\n      this.______slotChangeListeners = value;\n    }\n  },\n  ____triggerSlotChangeEvent: {\n    value: debounce(function () {\n      if (this.____slotChangeListeners) {\n        this.dispatchEvent(new CustomEvent('slotchange', {\n          bubbles: false,\n          cancelable: false\n        }));\n      }\n    })\n  },\n  addEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange') {\n        this.____slotChangeListeners++;\n      }\n      return this.__addEventListener(name, func, opts);\n    }\n  },\n  appendChild: {\n    value (newNode) {\n      return appendChildOrInsertBefore(this, newNode);\n    }\n  },\n  assignedSlot: {\n    get () {\n      return null;\n    }\n  },\n  attachShadow: {\n    value (opts) {\n      const mode = opts && opts.mode;\n      if (mode !== 'closed' && mode !== 'open') {\n        throw new Error('You must specify { mode } as \"open\" or \"closed\" to attachShadow().');\n      }\n\n      const existingShadowRoot = this.____shadowRoot;\n      if (existingShadowRoot) {\n        return existingShadowRoot;\n      }\n\n      const shadowRoot = document.createElement(opts.polyfillShadowRootTagName || defaultShadowRootTagName);\n\n      // Emulating the spec { mode }.\n      Object.defineProperty(this, 'shadowRoot', {\n        configurable: true,\n        get () {\n          return mode === 'open' ? shadowRoot : null;\n        }\n      });\n\n      // Host and shadow root data.\n      this.____rootNode = shadowRoot;\n      this.____unslottedNodes = this.childNodes.concat();\n      shadowRoot.____hostNode = this;\n      shadowRoot.____slotNodes = [];\n\n      // The shadow root is actually the only child of the host.\n      return this.__appendChild(shadowRoot);\n    }\n  },\n  childElementCount: {\n    get () {\n      return this.children.length;\n    }\n  },\n  childNodes: {\n    get () {\n      return this.____childNodes || (this.____childNodes = makeLikeNodeList([]));\n    }\n  },\n  children: {\n    get () {\n      return makeLikeNodeList(this.childNodes.filter(node => node.nodeType === 1));\n    }\n  },\n  firstChild: {\n    get () {\n      return this.childNodes[0] || null;\n    }\n  },\n  firstElementChild: {\n    get () {\n      return this.children[0] || null;\n    }\n  },\n  getAssignedNodes: {\n    value () {\n      return this.____assignedNodes || [];\n    }\n  },\n  hasChildNodes: {\n    value () {\n      return this.childNodes.length > 0;\n    }\n  },\n  innerHTML: {\n    get () {\n      return this.childNodes.reduce(function (prev, curr) {\n        return prev + (curr.nodeType === 1 ? curr.outerHTML : curr.textContent);\n      }, '');\n    },\n    set (innerHTML) {\n      const parsed = parse(innerHTML);\n\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n\n      while (parsed.hasChildNodes()) {\n        const firstChild = parsed.firstChild;\n\n        // When we polyfill everything on HTMLElement.prototype, we overwrite\n        // properties. This makes it so that parentNode reports null even though\n        // it's actually a parent of the HTML parser. For this reason,\n        // cleanNode() won't work and we must manually remove it from the\n        // parser before it is moved to the host just in case it's added as a\n        // light node but not assigned to a slot.\n        parsed.removeChild(firstChild);\n\n        this.appendChild(firstChild);\n      }\n    }\n  },\n  insertBefore: {\n    value (newNode, refNode) {\n      return appendChildOrInsertBefore(this, newNode, refNode);\n    }\n  },\n  lastChild: {\n    get () {\n      const ch = this.childNodes;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  lastElementChild: {\n    get () {\n      const ch = this.children;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  name: {\n    get () {\n      return this.getAttribute('name');\n    },\n    set (name) {\n      return this.setAttribute('name', name);\n    }\n  },\n  nextSibling: {\n    get () {\n      const parentNode = this.parentNode;\n      if (parent) {\n        const childNodes = parentNode.childNodes;\n        return childNodes[childNodes.indexOf(this) + 1] || null;\n      }\n      return null;\n    }\n  },\n  nextElementSibling: {\n    get () {\n      let nextSibling = this;\n      while ((nextSibling = nextSibling.nextSibling)) {\n        if (nextSibling.nodeType === 1) {\n          return nextSibling;\n        }\n      }\n      return null;\n    }\n  },\n  outerHTML: {\n    get () {\n      const name = this.tagName.toLowerCase();\n      const attributes = Array.prototype.slice.call(this.attributes).map(function (attr) {\n        return ` ${attr.name}${attr.value ? `=\"${attr.value}\"` : ''}`;\n      }).join('');\n      return `<${name}${attributes}>${this.innerHTML}</${name}>`;\n    }\n  },\n  parentElement: {\n    get () {\n      return findClosest(this.parentNode, function (node) {\n        return node.nodeType === 1;\n      });\n    }\n  },\n  previousSibling: {\n    get () {\n      const parentNode = this.parentNode;\n      if (parent) {\n        const childNodes = parentNode.childNodes;\n        return childNodes[childNodes.indexOf(this) - 1] || null;\n      }\n      return null;\n    }\n  },\n  previousElementSibling: {\n    get () {\n      let previousSibling = this;\n      while ((previousSibling = previousSibling.previousSibling)) {\n        if (previousSibling.nodeType === 1) {\n          return previousSibling;\n        }\n      }\n      return null;\n    }\n  },\n  removeChild: {\n    value (refNode) {\n      let closestRoot;\n\n      if (isHostNode(this)) {\n        removeNodeFromHost(this, refNode);\n      } else if (isSlotNode(this)) {\n        removeNodeFromNode(this, refNode);\n      } else if ((closestRoot = findClosestShadowRoot(this))) {\n        removeNodeFromRoot(closestRoot, refNode);\n      } else {\n        removeNodeFromNode(this, refNode);\n      }\n    }\n  },\n  removeEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange' && this.____slotChangeListeners) {\n        this.____slotChangeListeners--;\n      }\n      return this.__removeEventListener(name, func, opts);\n    }\n  },\n  replaceChild: {\n    value (newNode, refNode) {\n      this.insertBefore(newNode, refNode);\n      return this.removeChild(refNode);\n    }\n  },\n  textContent: {\n    get () {\n      return this.childNodes.map(node => node.textContent).join('');\n    },\n    set (textContent) {\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n      this.appendChild(document.createTextNode(textContent));\n    }\n  }\n};\n\n\nconst protos = [Node, Element, EventTarget];\nfunction findDescriptorFor (name) {\n  for (let a = 0; a < protos.length; a++) {\n    const proto = protos[a].prototype;\n    if (proto.hasOwnProperty(name)) {\n      return Object.getOwnPropertyDescriptor(proto, name);\n    }\n  }\n}\n\nif (!('attachShadow' in document.createElement('div'))) {\n  const elementProto = HTMLElement.prototype;\n  Object.keys(members).forEach(function (memberName) {\n    const memberProperty = members[memberName];\n    const nativeDescriptor = findDescriptorFor(memberName);\n    memberProperty.configurable = true;\n    Object.defineProperty(elementProto, memberName, memberProperty);\n    if (nativeDescriptor && nativeDescriptor.configurable) {\n      Object.defineProperty(elementProto, '__' + memberName, nativeDescriptor);\n    }\n  });\n}\n\nexport default version;","\n  import main, * as api from '../src/index.js';\n  const previousGlobal = window.skatejsNamedSlots;\n  main.noConflict = function noConflict () {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = main;\n  for (let name in api) {\n    main[name] = api[name];\n  }\n  export default main;\n"],"names":["main"],"mappings":"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"}