{"version":3,"file":"index.js","sources":["../src/util/each.js","../src/util/can-patch-native-accessors.js","../node_modules/date-now/index.js","../node_modules/debounce/index.js","../src/util/get-escaped-text-content.js","../src/util/get-comment-node-outer-html.js","../src/version.js","../src/util/weak-map.js","../src/index.js","../src/global.js"],"sourcesContent":["export function eachChildNode (node, func) {\n  if (!node) {\n    return;\n  }\n\n  const chs = node.childNodes;\n  const chsLen = chs.length;\n  for (let a = 0; a < chsLen; a++) {\n    const ret = func(chs[a], a, chs);\n    if (typeof ret !== 'undefined') {\n      return ret;\n    }\n  }\n}\n\nexport function eachNodeOrFragmentNodes (node, func) {\n  if (node instanceof DocumentFragment) {\n    const chs = node.childNodes;\n    const chsLen = chs.length;\n    for (let a = 0; a < chsLen; a++) {\n      func(chs[a], a);\n    }\n  } else {\n    func(node, 0);\n  }\n}\n","// Any code referring to this is because it has to work around this bug in\n// WebKit: https://bugs.webkit.org/show_bug.cgi?id=49739\nexport default !!(Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode') && Object.getOwnPropertyDescriptor(window.Node.prototype, 'parentNode').get);\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","/**\n * See https://w3c.github.io/DOM-Parsing/#serializing\n * @param {TextNode}\n * @returns {string}\n */\nexport default function getEscapedTextContent (textNode) {\n  return textNode.textContent.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n","/**\n * @returns {string}\n * @param {commentNode}\n */\nexport default function getCommentNodeOuterHtml (commentNode) {\n  return `<!--${commentNode.textContent}-->`;\n}\n","export default '0.0.1';\n","export default window.WeakMap || (function () {\n  let index = 0;\n  function Wm () {\n    this.key = `____weak_map_${index++}`;\n  }\n  Wm.prototype = {\n    delete (obj) {\n      if (obj) {\n        delete obj[this.key];\n      }\n    },\n    get (obj) {\n      return obj ? obj[this.key] : null;\n    },\n    has (obj) {\n      return obj ? typeof obj[this.key] !== 'undefined' : false;\n    },\n    set (obj, val) {\n      if (obj) {\n        const key = this.key;\n        if (typeof obj[key] === 'undefined') {\n          Object.defineProperty(obj, key, {\n            configurable: true,\n            enumerable: false,\n            value: val\n          });\n        } else {\n          obj[key] = val;\n        }\n      }\n    }\n  };\n  return Wm;\n}());\n","import { eachChildNode, eachNodeOrFragmentNodes } from './util/each';\nimport canPatchNativeAccessors from './util/can-patch-native-accessors';\nimport debounce from 'debounce';\nimport getEscapedTextContent from './util/get-escaped-text-content';\nimport getCommentNodeOuterHtml from './util/get-comment-node-outer-html';\nimport version from './version';\nimport WeakMap from './util/weak-map';\n\nconst arrProto = Array.prototype;\nconst { forEach } = arrProto;\n\n// We use a real DOM node for a shadow root. This is because the host node\n// basically becomes a virtual entry point for your element leaving the shadow\n// root the only thing that can receive instructions on how the host should\n// render to the browser.\nconst defaultShadowRootTagName = '_shadow_root_';\nconst defaultShadowRootTagNameUc = defaultShadowRootTagName.toUpperCase();\n\n// * WebKit only *\n//\n// These members we need cannot override as we require native access to their\n// original values at some point.\nconst polyfillAtRuntime = ['childNodes', 'parentNode'];\n\n// These are the protos that we need to search for native descriptors on.\nconst protos = ['Node', 'Element', 'EventTarget'];\n\n//some properties that should not be overridden in the Text prototype\nconst doNotOverridePropertiesInTextNodes = ['textContent'];\n\n// Private data stores.\nconst assignedToSlotMap = new WeakMap();\nconst hostToModeMap = new WeakMap();\nconst hostToRootMap = new WeakMap();\nconst nodeToChildNodesMap = new WeakMap();\nconst nodeToParentNodeMap = new WeakMap();\nconst nodeToSlotMap = new WeakMap();\nconst rootToHostMap = new WeakMap();\nconst rootToSlotMap = new WeakMap();\n\n\n// * WebKit only *\n//\n// We require some way to parse HTML natively because we can't use the native\n// accessors.\n\nconst parser = new DOMParser();\nfunction parse (html) {\n  const tree = document.createElement('div');\n  const parsed = parser.parseFromString(`<div>${html}</div>`, 'text/html').body.firstChild;\n  while (parsed.hasChildNodes()) {\n    const firstChild = parsed.firstChild;\n    parsed.removeChild(firstChild);\n    tree.appendChild(firstChild);\n  }\n  // Need to import the node to initialise the custom elements from the parser.\n  return document.importNode(tree, true);\n}\n\nfunction staticProp (obj, name, value) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    get () { return value; }\n  });\n}\n\n\n// Slotting helpers.\n\nfunction arrayItem (idx) {\n  return this[idx];\n}\n\nfunction makeLikeNodeList (arr) {\n  arr.item = arrayItem;\n  return arr;\n}\n\nfunction getNodeType (node) {\n  if (isHostNode(node)) {\n    return 'host';\n  }\n\n  if (isSlotNode(node)) {\n    return 'slot';\n  }\n\n  if (isRootNode(node)) {\n    return 'root';\n  }\n\n  return 'node';\n}\n\nfunction isHostNode (node) {\n  return !!hostToRootMap.get(node);\n}\n\nfunction isSlotNode (node) {\n  return node.tagName === 'SLOT';\n}\n\nfunction isRootNode (node) {\n  return node.tagName === defaultShadowRootTagNameUc;\n}\n\nfunction findClosest (node, func) {\n  while (node) {\n    if (node === document) {\n      break;\n    }\n    if (func(node)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n}\n\nfunction getSlotNameFromSlot (node) {\n  return node.getAttribute && node.getAttribute('name') || 'default';\n}\n\nfunction getSlotNameFromNode (node) {\n  return node.getAttribute && node.getAttribute('slot') || 'default';\n}\n\nfunction slotNodeIntoSlot (slot, node, insertBefore) {\n  // Don't slot nodes that have content but are only whitespace. This is an\n  // anomaly that I don't think the spec deals with.\n  //\n  // The problem is:\n  //\n  // - If you insert HTML with indentation into the page, there will be\n  //   whitespace and if that's inserted it messes with fallback content\n  //   calculation where there is formatting, but no meaningful content, so in\n  //   theory it should fallback. Since you can attach a shadow root after we\n  //   mean to insert an empty text node and have it \"count\", we can't really\n  //   discard nodes that are considered formatting at the time of attachment.\n  // - You can insert a text node and modify its text content later.\n  //   Incremental DOM seems to do this. Every way I look at it, it seems\n  //   problematic that we should have to screen for content, but I don't seems\n  //   much of a way around it at the moment.\n  if (node.nodeType === 3 && node.textContent && node.textContent.trim().length === 0) {\n    return;\n  }\n\n  const assignedNodes = slot.getAssignedNodes();\n  const shouldGoIntoContentMode = assignedNodes.length === 0;\n  const slotInsertBeforeIndex = assignedNodes.indexOf(insertBefore);\n\n  // Assign the slot to the node internally.\n  nodeToSlotMap.set(node, slot);\n\n  // Remove the fallback content and state if we're going into content mode.\n  if (shouldGoIntoContentMode) {\n    forEach.call(slot.childNodes, node => slot.__removeChild(node));\n  }\n\n  if (slotInsertBeforeIndex > -1) {\n    slot.__insertBefore(node, insertBefore);\n    assignedNodes.splice(slotInsertBeforeIndex, 0, node);\n  } else {\n    slot.__appendChild(node);\n    assignedNodes.push(node);\n  }\n\n  slot.____triggerSlotChangeEvent();\n}\n\nfunction slotNodeFromSlot (node) {\n  const slot = node.assignedSlot;\n\n  if (slot) {\n    const assignedNodes = slot.getAssignedNodes();\n    const index = assignedNodes.indexOf(node);\n\n    if (index > -1) {\n      const shouldGoIntoDefaultMode = assignedNodes.length === 1;\n\n      assignedNodes.splice(index, 1);\n      nodeToSlotMap.set(node, null);\n\n      // Actually remove the child.\n      slot.__removeChild(node);\n\n      // If this was the last slotted node, then insert fallback content.\n      if (shouldGoIntoDefaultMode) {\n        forEach.call(slot.childNodes, node => slot.__appendChild(node));\n      }\n\n      slot.____triggerSlotChangeEvent();\n    }\n  }\n}\n\n// Returns the index of the node in the host's childNodes.\nfunction indexOfNode (host, node) {\n  const chs = host.childNodes;\n  const chsLen = chs.length;\n  for (let a = 0; a < chsLen; a++) {\n    if (chs[a] === node) {\n      return a;\n    }\n  }\n  return -1;\n}\n\n// Adds the node to the list of childNodes on the host and fakes any necessary\n// information such as parentNode.\nfunction registerNode (host, node, insertBefore, func) {\n  const index = indexOfNode(host, insertBefore);\n  eachNodeOrFragmentNodes(node, function (eachNode, eachIndex) {\n    func(eachNode, eachIndex);\n\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(eachNode, host);\n    } else {\n      staticProp(eachNode, 'parentNode', host);\n    }\n\n    if (index > -1) {\n      arrProto.splice.call(host.childNodes, index + eachIndex, 0, eachNode);\n    } else {\n      arrProto.push.call(host.childNodes, eachNode);\n    }\n  });\n}\n\n// Cleans up registerNode().\nfunction unregisterNode (host, node, func) {\n  const index = indexOfNode(host, node);\n  if (index > -1) {\n    func(node, 0);\n\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(node, null);\n    } else {\n      staticProp(node, 'parentNode', null);\n    }\n\n    arrProto.splice.call(host.childNodes, index, 1);\n  }\n}\n\nfunction addNodeToNode (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    host.__insertBefore(eachNode, insertBefore);\n  });\n}\n\nfunction addNodeToHost (host, node, insertBefore) {\n  registerNode(host, node, insertBefore, function (eachNode) {\n    const rootNode = hostToRootMap.get(host);\n    const slotNodes = rootToSlotMap.get(rootNode);\n    const slotNode = slotNodes[getSlotNameFromNode(eachNode)];\n    if (slotNode) {\n      slotNodeIntoSlot(slotNode, eachNode, insertBefore);\n    }\n  });\n}\n\nfunction addNodeToRoot (root, node, insertBefore) {\n  eachNodeOrFragmentNodes(node, function (node) {\n    if (isSlotNode(node)) {\n      addSlotToRoot(root, node);\n    } else {\n      const slotNodes = node.querySelectorAll && node.querySelectorAll('slot');\n      if (slotNodes) {\n        const slotNodesLen = slotNodes.length;\n        for (let a = 0; a < slotNodesLen; a++) {\n          addSlotToRoot(root, slotNodes[a]);\n        }\n      }\n    }\n  });\n  addNodeToNode(root, node, insertBefore);\n}\n\n// Adds a node to a slot. In other words, adds default content to a slot. It\n// ensures that if the slot doesn't have any assigned nodes yet, that the node\n// is actually displayed, otherwise it's just registered as child content.\nfunction addNodeToSlot (slot, node, insertBefore) {\n  const isInDefaultMode = slot.getAssignedNodes().length === 0;\n  registerNode(slot, node, insertBefore, function (eachNode) {\n    if (isInDefaultMode) {\n      slot.__insertBefore(eachNode, insertBefore);\n    }\n  });\n}\n\n// Removes a node from a slot (default content). It ensures that if the slot\n// doesn't have any assigned nodes yet, that the node is actually removed,\n// otherwise it's just unregistered.\nfunction removeNodeFromSlot (slot, node) {\n  const isInDefaultMode = slot.getAssignedNodes().length === 0;\n  unregisterNode(slot, node, function () {\n    if (isInDefaultMode) {\n      slot.__removeChild(node);\n    }\n  });\n}\n\nfunction addSlotToRoot (root, slot) {\n  const slotName = getSlotNameFromSlot(slot);\n\n  // Ensure a slot node's childNodes are overridden at the earliest point\n  // possible for WebKit.\n  if (!canPatchNativeAccessors && !slot.childNodes.push) {\n    staticProp(slot, 'childNodes', []);\n  }\n\n  rootToSlotMap.get(root)[slotName] = slot;\n  eachChildNode(rootToHostMap.get(root), function (eachNode) {\n    if (!eachNode.assignedSlot && slotName === getSlotNameFromNode(eachNode)) {\n      slotNodeIntoSlot(slot, eachNode);\n    }\n  });\n}\n\nfunction removeNodeFromNode (host, node) {\n  unregisterNode(host, node, function () {\n    host.__removeChild(node);\n  });\n}\n\nfunction removeNodeFromHost (host, node) {\n  unregisterNode(host, node, function () {\n    slotNodeFromSlot(node);\n  });\n}\n\nfunction removeNodeFromRoot (root, node) {\n  unregisterNode(root, node, function () {\n    if (isSlotNode(node)) {\n      removeSlotFromRoot(root, node);\n    } else {\n      const nodes = node.querySelectorAll && node.querySelectorAll('slot');\n      for (let a = 0; a < nodes.length; a++) {\n        removeSlotFromRoot(root, nodes[a]);\n      }\n    }\n  });\n}\n\nfunction removeSlotFromRoot (root, node) {\n  node.getAssignedNodes().forEach(slotNodeFromSlot);\n  delete rootToSlotMap.get(root)[getSlotNameFromSlot(node)];\n}\n\n// TODO terribly inefficient\nfunction getRootNode (host) {\n  if (isRootNode(host)) {\n    return host;\n  } else {\n    if (!host.parentNode) {\n      return;\n    }\n\n    return getRootNode(host.parentNode);\n  }\n}\n\nfunction appendChildOrInsertBefore (host, newNode, refNode) {\n  const nodeType = getNodeType(host);\n  const parentNode = newNode.parentNode;\n  const rootNode = getRootNode(host);\n\n  // Ensure childNodes is patched so we can manually update it for WebKit.\n  if (!canPatchNativeAccessors && !host.childNodes.push) {\n    staticProp(host, 'childNodes', []);\n  }\n\n  if (rootNode && getNodeType(newNode) === 'slot') {\n    addSlotToRoot(rootNode, newNode);\n  }\n\n  // If we append a child to a host, the host tells the shadow root to distribute\n  // it. If the root decides it doesn't need to be distributed, it is never\n  // removed from the old parent because in polyfill land we store a reference\n  // to the node but we don't move it. Due to that, we must explicitly remove the\n  // node from its old parent.\n  if (parentNode && getNodeType(parentNode) === 'host') {\n    if (canPatchNativeAccessors) {\n      nodeToParentNodeMap.set(newNode, null);\n    } else {\n      staticProp(newNode, 'parentNode', null);\n    }\n  }\n\n  if (nodeType === 'node') {\n    if (canPatchNativeAccessors) {\n      return host.__insertBefore(newNode, refNode);\n    } else {\n      return addNodeToNode(host, newNode, refNode);\n    }\n  }\n\n  if (nodeType === 'slot') {\n    return addNodeToSlot(host, newNode, refNode);\n  }\n\n  if (nodeType === 'host') {\n    return addNodeToHost(host, newNode, refNode);\n  }\n\n  if (nodeType === 'root') {\n    return addNodeToRoot(host, newNode, refNode);\n  }\n}\n\nconst members = {\n  // For testing purposes.\n  ____assignedNodes: {\n    get () {\n      return this.______assignedNodes || (this.______assignedNodes = []);\n    }\n  },\n\n  // For testing purposes.\n  ____isInFallbackMode: {\n    get () {\n      return this.getAssignedNodes().length === 0;\n    }\n  },\n\n  ____slotChangeListeners: {\n    get () {\n      if (typeof this.______slotChangeListeners === 'undefined') {\n        this.______slotChangeListeners = 0;\n      }\n      return this.______slotChangeListeners;\n    },\n    set (value) {\n      this.______slotChangeListeners = value;\n    }\n  },\n  ____triggerSlotChangeEvent: {\n    value: debounce(function () {\n      if (this.____slotChangeListeners) {\n        this.dispatchEvent(new CustomEvent('slotchange', {\n          bubbles: false,\n          cancelable: false\n        }));\n      }\n    })\n  },\n  addEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange' && isSlotNode(this)) {\n        this.____slotChangeListeners++;\n      }\n      return this.__addEventListener(name, func, opts);\n    }\n  },\n  appendChild: {\n    value (newNode) {\n      return appendChildOrInsertBefore(this, newNode);\n    }\n  },\n  assignedSlot: {\n    get () {\n      return nodeToSlotMap.get(this) || null;\n    }\n  },\n  attachShadow: {\n    value (opts) {\n      const mode = opts && opts.mode;\n      if (mode !== 'closed' && mode !== 'open') {\n        throw new Error('You must specify { mode } as \"open\" or \"closed\" to attachShadow().');\n      }\n\n      // Return the existing shadow root if it exists.\n      const existingShadowRoot = hostToRootMap.get(this);\n      if (existingShadowRoot) {\n        return existingShadowRoot;\n      }\n\n      const lightNodes = makeLikeNodeList([].slice.call(this.childNodes));\n      const shadowRoot = document.createElement(opts.polyfillShadowRootTagName || defaultShadowRootTagName);\n\n      // Host and shadow root data.\n      hostToModeMap.set(this, mode);\n      hostToRootMap.set(this, shadowRoot);\n      rootToHostMap.set(shadowRoot, this);\n      rootToSlotMap.set(shadowRoot, {});\n\n      if (canPatchNativeAccessors) {\n        nodeToChildNodesMap.set(this, lightNodes);\n      } else {\n        staticProp(this, 'childNodes', lightNodes);\n      }\n\n      // Process light DOM.\n      lightNodes.forEach(node => {\n        // Existing children should be removed from being displayed, but still\n        // appear to be child nodes. This is how light DOM works; they're still\n        // child nodes but not in the composed DOM yet as there won't be any\n        // slots for them to go into.\n        this.__removeChild(node);\n\n        // We must register the parentNode here as this has the potential to\n        // become out of sync if the node is moved before being slotted.\n        if (canPatchNativeAccessors) {\n          nodeToParentNodeMap.set(node, this);\n        } else {\n          staticProp(node, 'parentNode', this);\n        }\n      });\n\n      // The shadow root is actually the only child of the host.\n      return this.__appendChild(shadowRoot);\n    }\n  },\n  childElementCount: {\n    get () {\n      return this.children.length;\n    }\n  },\n  childNodes: {\n    get () {\n      if (canPatchNativeAccessors && getNodeType(this) === 'node') {\n        return this.__childNodes;\n      }\n      let childNodes = nodeToChildNodesMap.get(this);\n      childNodes || nodeToChildNodesMap.set(this, childNodes = makeLikeNodeList([]));\n      return childNodes;\n    }\n  },\n  children: {\n    get () {\n      const chs = [];\n      eachChildNode(this, function (node) {\n        if (node.nodeType === 1) {\n          chs.push(node);\n        }\n      });\n      return makeLikeNodeList(chs);\n    }\n  },\n  firstChild: {\n    get () {\n      return this.childNodes[0] || null;\n    }\n  },\n  firstElementChild: {\n    get () {\n      return this.children[0] || null;\n    }\n  },\n  getAssignedNodes: {\n    value () {\n      if (isSlotNode(this)) {\n        let assigned = assignedToSlotMap.get(this);\n        assigned || assignedToSlotMap.set(this, assigned = []);\n        return assigned;\n      }\n    }\n  },\n  hasChildNodes: {\n    value () {\n      return this.childNodes.length > 0;\n    }\n  },\n  innerHTML: {\n    get () {\n      let innerHTML = '';\n\n      const getHtmlNodeOuterHtml = (node) => node.outerHTML;\n      const getOuterHtmlByNodeType = {\n        1: getHtmlNodeOuterHtml,\n        3: getEscapedTextContent,\n        8: getCommentNodeOuterHtml\n      };\n\n      eachChildNode(this, function (node) {\n        const getOuterHtml = getOuterHtmlByNodeType[node.nodeType] || getHtmlNodeOuterHtml;\n        innerHTML += getOuterHtml(node);\n      });\n      return innerHTML;\n    },\n    set (innerHTML) {\n      const parsed = parse(innerHTML);\n\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n\n      while (parsed.hasChildNodes()) {\n        const firstChild = parsed.firstChild;\n\n        // When we polyfill everything on HTMLElement.prototype, we overwrite\n        // properties. This makes it so that parentNode reports null even though\n        // it's actually a parent of the HTML parser. For this reason,\n        // cleanNode() won't work and we must manually remove it from the\n        // parser before it is moved to the host just in case it's added as a\n        // light node but not assigned to a slot.\n        parsed.removeChild(firstChild);\n\n        this.appendChild(firstChild);\n      }\n    }\n  },\n  insertBefore: {\n    value (newNode, refNode) {\n      return appendChildOrInsertBefore(this, newNode, refNode);\n    }\n  },\n  lastChild: {\n    get () {\n      const ch = this.childNodes;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  lastElementChild: {\n    get () {\n      const ch = this.children;\n      return ch[ch.length - 1] || null;\n    }\n  },\n  name: {\n    get () {\n      return this.getAttribute('name');\n    },\n    set (name) {\n      return this.setAttribute('name', name);\n    }\n  },\n  nextSibling: {\n    get () {\n      const host = this;\n      return eachChildNode(this.parentNode, function (child, index, nodes) {\n        if (host === child) {\n          return nodes[index + 1] || null;\n        }\n      });\n    }\n  },\n  nextElementSibling: {\n    get () {\n      const host = this;\n      let found;\n      return eachChildNode(this.parentNode, function (child) {\n        if (found && child.nodeType === 1) {\n          return child;\n        }\n        if (host === child) {\n          found = true;\n        }\n      });\n    }\n  },\n  outerHTML: {\n    get () {\n      const name = this.tagName.toLowerCase();\n      const attributes = Array.prototype.slice.call(this.attributes).map(function (attr) {\n        return ` ${attr.name}${attr.value ? `=\"${attr.value}\"` : ''}`;\n      }).join('');\n      return `<${name}${attributes}>${this.innerHTML}</${name}>`;\n    }\n  },\n  parentElement: {\n    get () {\n      return findClosest(this.parentNode, function (node) {\n        return node.nodeType === 1;\n      });\n    }\n  },\n  parentNode: {\n    get () {\n      return nodeToParentNodeMap.get(this) || this.__parentNode || null;\n    }\n  },\n  previousSibling: {\n    get () {\n      const host = this;\n      return eachChildNode(this.parentNode, function (child, index, nodes) {\n        if (host === child) {\n          return nodes[index - 1] || null;\n        }\n      });\n    }\n  },\n  previousElementSibling: {\n    get () {\n      const host = this;\n      let found;\n      return eachChildNode(this.parentNode, function (child) {\n        if (found && host === child) {\n          return found;\n        }\n        if (child.nodeType === 1) {\n          found = child;\n        }\n      });\n    }\n  },\n  removeChild: {\n    value (refNode) {\n      const nodeType = getNodeType(this);\n\n      if (nodeType === 'node') {\n        if (canPatchNativeAccessors) {\n          return this.__removeChild(refNode);\n        } else {\n          return removeNodeFromNode(this, refNode);\n        }\n      }\n\n      if (nodeType === 'slot') {\n        return removeNodeFromSlot(this, refNode);\n      }\n\n      if (nodeType === 'host') {\n        return removeNodeFromHost(this, refNode);\n      }\n\n      if (nodeType === 'root') {\n        return removeNodeFromRoot(this, refNode);\n      }\n    }\n  },\n  removeEventListener: {\n    value (name, func, opts) {\n      if (name === 'slotchange' && this.____slotChangeListeners && isSlotNode(this)) {\n        this.____slotChangeListeners--;\n      }\n      return this.__removeEventListener(name, func, opts);\n    }\n  },\n  replaceChild: {\n    value (newNode, refNode) {\n      this.insertBefore(newNode, refNode);\n      return this.removeChild(refNode);\n    }\n  },\n  shadowRoot: {\n    get () {\n      return hostToModeMap.get(this) === 'open' ? hostToRootMap.get(this) : null;\n    }\n  },\n  textContent: {\n    get () {\n      let textContent = '';\n      eachChildNode(this, function (node) {\n        if (node.nodeType !== Node.COMMENT_NODE) {\n          textContent += node.textContent;\n        }\n      });\n      return textContent;\n    },\n    set (textContent) {\n      while (this.hasChildNodes()) {\n        this.removeChild(this.firstChild);\n      }\n      if (!textContent) {\n        return;\n      }\n      this.appendChild(document.createTextNode(textContent));\n    }\n  }\n};\n\nfunction findDescriptorFor (name) {\n  for (let a = 0; a < protos.length; a++) {\n    const ctor = window[protos[a]];\n    if (!ctor) {\n      continue;\n    }\n    const proto = ctor.prototype;\n    if (proto.hasOwnProperty(name)) {\n      return Object.getOwnPropertyDescriptor(proto, name);\n    }\n  }\n}\n\nif (!('attachShadow' in document.createElement('div'))) {\n  const elementProto = HTMLElement.prototype;\n  const textProto = Text.prototype;\n  Object.keys(members).forEach(function (memberName) {\n    const memberProperty = members[memberName];\n\n    // All properties should be configurable.\n    memberProperty.configurable = true;\n    // Applying to the data properties only since we can't have writable accessor properties\n    if (memberProperty.hasOwnProperty('value')) {\n      memberProperty.writable = true;\n    }\n\n    // Polyfill as much as we can and work around WebKit in other areas.\n    if (canPatchNativeAccessors || polyfillAtRuntime.indexOf(memberName) === -1) {\n      const nativeDescriptor = findDescriptorFor(memberName);\n      Object.defineProperty(elementProto, memberName, memberProperty);\n      const isDefinedInTextProto = memberName in textProto;\n      const shouldOverrideInTextNode = doNotOverridePropertiesInTextNodes.indexOf(memberName) === -1;\n      if (isDefinedInTextProto && shouldOverrideInTextNode) {\n        Object.defineProperty(textProto, memberName, memberProperty);\n      }\n      if (nativeDescriptor && nativeDescriptor.configurable) {\n        Object.defineProperty(elementProto, '__' + memberName, nativeDescriptor);\n        if(isDefinedInTextProto && shouldOverrideInTextNode) {\n          Object.defineProperty(textProto, '__' + memberName, nativeDescriptor);\n        }\n      }\n    }\n  });\n}\n\nexport default version;\n","\n  import main, * as api from '../src/index.js';\n  const previousGlobal = window.skatejsNamedSlots;\n  main.noConflict = function noConflict () {\n    window.skatejsNamedSlots = previousGlobal;\n    return this;\n  };\n  window.skatejsNamedSlots = main;\n  for (let name in api) {\n    main[name] = api[name];\n  }\n  main.version = '0.1.8';\n  export default main;\n"],"names":["main"],"mappings":"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"}